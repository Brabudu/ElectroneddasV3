
/tmp/arduino/sketches/19CD10A84C0E8AD1F6068DFC44C29E0F/Teensy_Electroneddas.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600021e0 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0002bb10 l    d  .fini	00000000 .fini
0002bb14 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20005ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
60035124 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 imxrt_hw.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 analog.c
20014f3a l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
200142a4 l     O .bss	00000004 s_hotCount
200142a8 l     O .bss	00000004 s_hotTemp
200142ac l     O .bss	00000004 s_hot_ROOM
200142b0 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00020420 l     F .text.itcm	000000c8 endpoint0_receive
000204e8 l     F .text.itcm	00000088 schedule_transfer
00020570 l     F .text.itcm	00000036 run_callbacks
000205a8 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
200075d4 l     O .bss	00000008 endpoint0_buffer
200075dc l     O .bss	00000004 endpoint0_notify_mask
20006338 l     O .bss	00000008 endpoint0_setupdata
200075e0 l     O .bss	00000004 endpointN_notify_mask
20014248 l     O .bss	00000008 reply_buffer
20014f46 l     O .bss	00000001 sof_usage
20014f59 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000e0 l     F .text.itcm	00000000 register_tm_clones
00000104 l     F .text.itcm	00000000 frame_dummy
200140a8 l     O .bss	00000000 object.0
60002160 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Cannas.cpp
00000128 l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
00000130 l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
00000138 l     F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*)#4}::_FUN(void*)
0000013c l     F .text.itcm	000000ba bool ArduinoJson::V6215PB2::detail::storeString<ArduinoJson::V6215PB2::detail::ZeroTerminatedRamString, ArduinoJson::V6215PB2::detail::VariantData::VariantStringSetter>(ArduinoJson::V6215PB2::detail::MemoryPool*, ArduinoJson::V6215PB2::detail::ZeroTerminatedRamString, ArduinoJson::V6215PB2::detail::StringStoragePolicy::Copy, ArduinoJson::V6215PB2::detail::VariantData::VariantStringSetter) [clone .isra.0]
000001f8 l     F .text.itcm	00000084 StringSplit(String, char, String*, int) [clone .isra.0]
0000261c l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*)#1}::_FUN(void*)
000040e8 l     F .text.itcm	00000898 ArduinoJson::V6215PB2::DeserializationError::Code ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<Stream, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseVariant<ArduinoJson::V6215PB2::detail::AllowAllFilter>(ArduinoJson::V6215PB2::detail::VariantData&, ArduinoJson::V6215PB2::detail::AllowAllFilter, ArduinoJson::V6215PB2::DeserializationOption::NestingLimit) [clone .isra.0]
00005708 l     F .text.itcm	00000760 ArduinoJson::V6215PB2::DeserializationError::Code ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<char const*, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseVariant<ArduinoJson::V6215PB2::detail::AllowAllFilter>(ArduinoJson::V6215PB2::detail::VariantData&, ArduinoJson::V6215PB2::detail::AllowAllFilter, ArduinoJson::V6215PB2::DeserializationOption::NestingLimit) [clone .isra.0]
00005e68 l     F .text.itcm	00000060 ArduinoJson::V6215PB2::DeserializationError ArduinoJson::V6215PB2::detail::deserialize<ArduinoJson::V6215PB2::detail::JsonDeserializer, char const*&, , void>(ArduinoJson::V6215PB2::JsonDocument&, char const*&) [clone .isra.0]
00008338 l     F .text.itcm	00000380 ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >::result_type ArduinoJson::V6215PB2::detail::VariantData::accept<ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> > >(ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >&) const [clone .isra.0]
00009a74 l     F .text.itcm	00000064 _GLOBAL__sub_I_waves
200068b4 l     O .bss	0000000c info_B
200068cc l     O .bss	0000000c info_C
200068e4 l     O .bss	0000000c info_E
60002be0 l     O .text.progmem	00000200 wtumbu
600029e0 l     O .text.progmem	00000200 wtumbu2
600027e0 l     O .text.progmem	00000200 wtumbu3
600025e0 l     O .text.progmem	00000200 cab_md_po_sol
600023e0 l     O .text.progmem	00000200 cab_md_c_mi
600021e0 l     O .text.progmem	00000200 cab_ms_po_sol
20002bd0 l     O .data	00000034 pitagorica
200034dc l     O .data	00000034 naturale
20003510 l     O .data	00000034 temperata
20003fc0 l     O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<Cuntzertu::beginTimer()::{lambda()#1}, Cuntzertu::beginTimer()::{lambda()#1}, void>(Cuntzertu::beginTimer()::{lambda()#1}&&)::vt
00000000 l    df *ABS*	00000000 Display.cpp
0000c678 l     F .text.itcm	00000438 Display::cursMenu(unsigned char, unsigned char, bool, bool) [clone .part.0]
0000f130 l     F .text.itcm	000000b0 _GLOBAL__sub_I_enc_pos
60002de0 l     O .text.progmem	00000320 charMap
60003100 l     O .text.progmem	000000fa menu
600031fc l     O .text.progmem	00000008 allpass_8x4
60003204 l     O .text.progmem	00000008 lopass_8x4
6000320c l     O .text.progmem	00000008 hipass_8x4
60003214 l     O .text.progmem	00000016 sd_bitmap_16x11
6000322c l     O .text.progmem	00000120 el_bitmap_48x48
6000334c l     O .text.progmem	0000000f _oled_init
00000000 l    df *ABS*	00000000 Teensy_Electroneddas.ino.cpp
00011e48 l     F .text.itcm	00000010 lpspi4_slave_isr()
20200000 l     O .bss.dma	00001450 setup::data
00012ad0 l     F .text.itcm	00000694 parse(String) [clone .part.0]
00013334 l     F .text.itcm	00000744 _GLOBAL__sub_I_tSynth
200068c0 l     O .bss	0000000c info_B
200068d8 l     O .bss	0000000c info_C
200068f0 l     O .bss	0000000c info_E
200068fc l     O .bss	00000004 _LPSPI4
20002d30 l     O .data	000006d8 json
00000000 l    df *ABS*	00000000 async_input_spdif3.cpp
00013d14 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN21AsyncAudioInputSPDIF310microsLastE
00000000 l    df *ABS*	00000000 input_adc.cpp
000148ac l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputAnalog3dmaE
00000000 l    df *ABS*	00000000 input_i2s.cpp
000148c4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
00000000 l    df *ABS*	00000000 input_i2s2.cpp
000148dc l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputI2S210block_leftE
00000000 l    df *ABS*	00000000 input_i2s_hex.cpp
000148f4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SHex9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_oct.cpp
0001490c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SOct9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
00014924 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 input_pdm.cpp
0001493c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 input_pdm_i2s2.cpp
00014954 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputPDM210block_leftE
00000000 l    df *ABS*	00000000 input_spdif3.cpp
0001496c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputSPDIF310block_leftE
00000000 l    df *ABS*	00000000 input_tdm.cpp
00014984 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_tdm2.cpp
0001499c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputTDM214block_incomingE
00000000 l    df *ABS*	00000000 output_i2s.cpp
00014b24 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s2.cpp
00014b3c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputI2S214block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s_hex.cpp
00014b54 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SHex13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_oct.cpp
00014b6c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SOct13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
00014b84 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_mqs.cpp
00014b9c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputMQS14block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
00015360 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
20006be8 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateLOld
20006bf4 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateLOld
20006c00 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateROld
20006c0c l     O .bss	0000000c AudioOutputPT8211::isr()::integrateROld
20006c18 l     O .bss	00000004 AudioOutputPT8211::isr()::oldL
20006c1c l     O .bss	00000004 AudioOutputPT8211::isr()::oldR
20006c20 l     O .bss	00000008 AudioOutputPT8211::isr()::combLOld
20006c28 l     O .bss	00000008 AudioOutputPT8211::isr()::combLOld
20006c30 l     O .bss	00000008 AudioOutputPT8211::isr()::combROld
20006c38 l     O .bss	00000008 AudioOutputPT8211::isr()::combROld
20201460 l     O .bss.dma	00000800 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_pt8211_2.cpp
00015378 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN19AudioOutputPT8211_214block_left_1stE
00000000 l    df *ABS*	00000000 output_pwm.cpp
00015390 l     F .text.itcm	0000001c __tcf_0
000153ac l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN14AudioOutputPWM21update_responsibilityE
00000000 l    df *ABS*	00000000 output_spdif.cpp
000153dc l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif2.cpp
000153f4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF214block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif3.cpp
0001540c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF314block_left_1stE
00000000 l    df *ABS*	00000000 output_tdm.cpp
00015424 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_tdm2.cpp
0001543c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputTDM211block_inputE
00000000 l    df *ABS*	00000000 SD.cpp
00016918 l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
0001e784 l     F .text.itcm	00000084 pit_isr()
0001e808 l     F .text.itcm	00000020 __tcf_0
0001e99c l     F .text.itcm	0000002c _GLOBAL__sub_I__ZN13IntervalTimer14nvic_prioritesE
20005ec0 l     O .bss	00000060 funct_table
00000000 l    df *ABS*	00000000 usb_desc.c
20005878 l     O .data	00000012 device_descriptor
6000373c l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
0001fa18 l     F .text.itcm	00000002 dummy_isr
20002088 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 Communicator.cpp
00000000 l    df *ABS*	00000000 ElFileSystem.cpp
0001062c l     F .text.itcm	0000016c ElFileSystem::cuntzFromFile(Cuntzertu*, String, bool, char) [clone .part.0]
00000000 l    df *ABS*	00000000 Recorder.cpp
00000000 l    df *ABS*	00000000 synth_waveform2.cpp
00000000 l    df *ABS*	00000000 analyze_peak.cpp
00000000 l    df *ABS*	00000000 effect_delay_ext.cpp
00000000 l    df *ABS*	00000000 effect_freeverb.cpp
20003544 l     O .data	00000104 zeroblock
00000000 l    df *ABS*	00000000 filter_biquad.cpp
00000000 l    df *ABS*	00000000 mixer.cpp
00000000 l    df *ABS*	00000000 play_sd_raw.cpp
00000000 l    df *ABS*	00000000 synth_waveform.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00015ff4 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00017d18 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00018a70 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
0001a358 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
0001ab70 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
0001ac6c l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0001c300 l     F .text.itcm	00000030 sdIrs()
0001c330 l     F .text.itcm	00000014 isBusyDat()
0001c344 l     F .text.itcm	0000000c isBusyDMA()
0001c350 l     F .text.itcm	000000cc setSdclk(unsigned long)
0001c524 l     F .text.itcm	00000128 initSDHC()
0001c64c l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0001c788 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0001c820 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0001c91c l     F .text.itcm	0000002c isBusyCMD13()
0001cad4 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0001ccec l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
20014f2a l     O .bss	00000001 m_initDone
2000681c l     O .bss	00000004 m_sdClkKhz
20014f2b l     O .bss	00000001 m_version2
20006888 l     O .bss	00000004 m_errorLine
20014f2c l     O .bss	00000001 m_highCapacity
20014f2d l     O .bss	00000001 m_transferActive
2000688c l     O .bss	00000010 m_cid
2000689c l     O .bss	00000010 m_csd
200068ac l     O .bss	00000004 m_ocr
200068b0 l     O .bss	00000004 m_rca
20006900 l     O .bss	00000004 m_busyFcn
20014f2e l     O .bss	00000001 m_dmaBusy
20006904 l     O .bss	00000004 m_irqstat
20005af4 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20002c04 l     O .data	0000012c lookupTable
20003408 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 Entropy.cpp
20014f36 l     O .bss	00000001 EntropyClass::rnorm(float, float)::isSpareReady
20006be0 l     O .bss	00000004 EntropyClass::rnorm(float, float)::u1
20006be4 l     O .bss	00000004 EntropyClass::rnorm(float, float)::spare
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
20006820 l     O .bss	00000040 rx_buffer5
20006860 l     O .bss	00000028 tx_buffer5
20005230 l     O .data	00000060 UART8_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
0001e9d0 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 WString.cpp
20014f38 l     O .bss	00000001 String::operator[](unsigned int)::dummy_writable_char
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0001f620 l     F .text.itcm	0000005c flash_wait
20014f3d l     O .bss	00000001 initialized
200142b8 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_audio.cpp
00020ff4 l     F .text.itcm	00000098 copy_to_buffers(unsigned long const*, short*, short*, unsigned int)
0002108c l     F .text.itcm	0000005c sync_event(transfer_struct*)
00021354 l     F .text.itcm	00000054 rx_event(transfer_struct*)
000214c8 l     F .text.itcm	00000060 tx_event(transfer_struct*)
200052a0 l     O .data	00000004 usb_audio_transmit_callback::count
20201c80 l     O .bss.dma	000000b4 rx_buffer
20201d40 l     O .bss.dma	000000b4 tx_buffer
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
00021720 l     F .text.itcm	00000040 sysex_byte
00021760 l     F .text.itcm	00000060 rx_queue_transfer
000217c0 l     F .text.itcm	00000064 rx_event
00021824 l     F .text.itcm	0000013c usb_midi_write_packed.part.0
20014250 l     O .bss	00000004 rx_available
20014258 l     O .bss	0000000c rx_count
20014f42 l     O .bss	00000001 rx_head
20014274 l     O .bss	0000000c rx_index
20014290 l     O .bss	00000007 rx_list
20014f1c l     O .bss	00000002 rx_packet_size
20014f44 l     O .bss	00000001 rx_tail
20005f80 l     O .bss	000000c0 rx_transfer
20014f47 l     O .bss	00000001 transmit_previous_timeout
20014f20 l     O .bss	00000002 tx_available
20014f49 l     O .bss	00000001 tx_head
20014f4b l     O .bss	00000001 tx_noautoflush
20014f24 l     O .bss	00000002 tx_packet_size
20006180 l     O .bss	00000080 tx_transfer
20201f60 l     O .bss.dma	00000c00 rx_buffer
20202b60 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
00021f58 l     F .text.itcm	00000060 rx_queue_transfer
20203360 l     O .bss.dma	00001000 rx_buffer
00021fb8 l     F .text.itcm	000000b4 rx_event
0002206c l     F .text.itcm	00000090 usb_serial_flush_callback
20204360 l     O .bss.dma	00002000 txbuffer
000220fc l     F .text.itcm	000001b8 usb_serial_write.part.0
20014254 l     O .bss	00000004 rx_available
20014264 l     O .bss	00000010 rx_count
20014f43 l     O .bss	00000001 rx_head
20014280 l     O .bss	00000010 rx_index
20014298 l     O .bss	00000009 rx_list
20014f1e l     O .bss	00000002 rx_packet_size
20014f45 l     O .bss	00000001 rx_tail
20006040 l     O .bss	00000100 rx_transfer
20014f48 l     O .bss	00000001 transmit_previous_timeout
20014f22 l     O .bss	00000002 tx_available
20014f4a l     O .bss	00000001 tx_head
20014f4c l     O .bss	00000001 tx_noautoflush
20014f26 l     O .bss	00000002 tx_packet_size
20006200 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20014f35 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_log.o
00000000 l    df *ABS*	00000000 libm_a-w_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-s_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-e_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-sinf.o
00000000 l    df *ABS*	00000000 libm_a-cosf.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
00023ee4 l     F .text.itcm	00000018 with_errnof
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
00023fc0 l     F .text.itcm	00000018 with_errno
00023fd8 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
00026124 l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-isspace.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
000282e8 l     F .text.itcm	00000018 stdio_exit_handler
00028300 l     F .text.itcm	00000040 cleanup_stdio
00028340 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00028cb4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00028f7c l     F .text.itcm	00000076 __sprint_r.part.0
00029f80 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0002a430 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-sf_log_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 libm_a-sincosf_data.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 data_bandlimit_step.c
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 Encoder.cpp
0002bae8 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0002baf0 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
0002baf8 l     F .text.itcm	00000008 ___Z14set_audioClockilmb_veneer
0002bb00 l     F .text.itcm	00000008 ___init_veneer
0002bb08 l     F .text.itcm	00000008 ___ZN11AudioStream17initialize_memoryEP18audio_block_structj_veneer
60002108 l     F .text.code	00000008 ____libc_init_array_veneer
60002110 l     F .text.code	00000008 __pwm_init_veneer
60002118 l     F .text.code	00000008 ___ZZN6teensy23inplace_function_detail6vtableIvJEEC4IPFvvEEENS0_7wrapperIT_EEENUlPvS9_E0_4_FUNES9_S9__veneer
60002120 l     F .text.code	00000008 __delay_veneer
60002128 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002130 l     F .text.code	00000008 ___ZN13IntervalTimer11beginCyclesEN6teensy16inplace_functionIFvvELj16ELj8EEEm_veneer
60002138 l     F .text.code	00000008 __main_veneer
60002140 l     F .text.code	00000008 __set_arm_clock_veneer
60002148 l     F .text.code	00000008 __sm_set_pool_veneer
60002150 l     F .text.code	00000008 __memset_veneer
60002158 l     F .text.code	00000008 ___Znwj_veneer
000155b8  w    F .text.itcm	0000006e SDFile::getModifyTime(DateTimeFields&)
200069b0 g     O .bss	00000004 AudioInputUSB::incoming_right
0001dadc g     F .text.itcm	000000b8 toUpcase(unsigned short)
20013bd4 g     O .bss	00000014 md1_1
000224dc g     F .text.itcm	00000018 usb_serial_available
200069f8 g     O .bss	00000004 AudioOutputUSB::left_2nd
20014b90 g     O .bss	00000038 tMixer
00028120 g     F .text.itcm	00000062 __any_on
0002b418 g     F .text.itcm	00000024 _isatty_r
20006abc g     O .bss	00000008 AsyncAudioInputSPDIF3::dma
0002763c g     F .text.itcm	000000ba strcpy
0001ed38 g     F .text.itcm	0000002c String::String(int, unsigned char)
20014f12 g     O .bss	00000002 AudioInputUSB::incoming_count
0001ab08 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
0000a3cc  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
0000201c g     F .text.itcm	0000000a Cuntzertu::getVerbRoom()
60001998 g     F .text.code	00000002 startup_default_late_hook
00024740 g     F .text.itcm	00000012 fabs
0002b43c g     F .text.itcm	0000002c _lseek_r
2000690c g     O .bss	00000004 AudioStream::memory_pool
0001ce48 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
20014f18 g     O .bss	00000002 AudioOutputPT8211::block_right_offset
000226ac  w    F .text.itcm	000000d8 yield
000032f4 g     F .text.itcm	00000006 Cuntzertu::setPreferredCuntz(unsigned char)
0001b5fc  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
000235d0 g     F .text.itcm	00000048 sqrt
20014f04 g     O .bss	00000004 usb_timer1_callback
20013e7c g     O .bss	00000014 ms2_2
000198f0 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
200141a0 g     O .bss	00000014 outriv_3
20006280 g     O .bss	000000b4 usb_audio_transmit_buffer
60003470 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
0001e380 g     F .text.itcm	00000018 AudioConnection::AudioConnection()
0000a83c  w    F .text.itcm	0000008c Encoder::isr21()
20000cc0 g     O .data	00000120 .hidden __logf_data
60001ab0 g     F .text.code	00000384 configure_external_ram
2000d89c g     O .bss	000062a0 freeverbR
0001b57c  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
0001987c g     F .text.itcm	00000074 FatFile::truncate()
20014dac g     O .bss	00000004 usb_midi_handleProgramChange
20004fb0 g     O .data	00000140 Wire1
0001a31c  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00024c9c g     F .text.itcm	0000005a .hidden __floatdidf
200038f8  w    O .data	00000010 teensy::inplace_function_detail::empty_vtable<void>
00019c84 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
0000ac10  w    F .text.itcm	0000008c Encoder::isr28()
0001b078 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
0000a308 g     F .text.itcm	00000024 Communicator::msgError(String)
20014f2f g     O .bss	00000001 AudioStream::update_scheduled
20013e18 g     O .bss	00000014 ms1_0
20014338 g     O .bss	00000004 ser_b_index
20006908 g     O .bss	00000004 FsDateTime::callback
20006dd4 g     O .bss	00000001 __lock___atexit_recursive_mutex
0002a158 g     F .text.itcm	0000004c _wcrtomb_r
20013e54 g     O .bss	00000014 ms2_0
20013be8 g     O .bss	00000014 md1_2
00010828 g     F .text.itcm	00000006 ElFileSystem::isMounted()
600016c8 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
20014f50 g     O .bss	00000001 usb_audio_transmit_setting
00019dec g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0001bed4 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
0001a4a8 g     F .text.itcm	00000056 FatFormatter::initPbs()
0001eb04 g     F .text.itcm	0000001c Print::println()
0001de8c g     F .text.itcm	000000aa TwoWire::isr()
0001c2c8 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
20003d0c g     O .data	00000070 vtable for DedicatedSpiCard
20014f08 g     O .bss	00000002 AudioStream::memory_used
00028ea0 g     F .text.itcm	00000020 __sseek
00028414 g     F .text.itcm	0000003c __sinit
00016cc0 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
0002a0b4 g     F .text.itcm	000000a4 fcvtbuf
0002b89c g     F .text.itcm	000000b0 __swbuf_r
0001573c  w    F .text.itcm	00000028 File::flush()
00015628  w    F .text.itcm	0000006e SDFile::getCreateTime(DateTimeFields&)
0001ee4c g     F .text.itcm	0000001c String::append(char const*)
20007164 g     O .bss	0000009c bqMancsDinCrais
0000b2c0  w    F .text.itcm	00000090 Encoder::isr32()
20005870 g     O .data	00000005 crais_ms_po
20014d78 g     O .bss	00000004 usb_audio_overrun_count
00027704 g     F .text.itcm	0000000c __malloc_unlock
20014d90 g     O .bss	00000004 usb_midi_handleAfterTouch
20004e10 g     O .data	00000060 Serial5
00001b70 g     F .text.itcm	00000130 Cuntzertu::setVolBilMd(float, float)
000157c8  w    F .text.itcm	000000b0 SDFile::openNextFile(unsigned char)
20006ba0 g     O .bss	00000004 FsVolume::m_cwv
00018efc g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
0000b234  w    F .text.itcm	0000008c Encoder::isr31()
20014f34 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
0001b570  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
0000be74  w    F .text.itcm	0000008c Encoder::isr13()
6000193c g     F .text.code	00000054 analog_init
00018c64 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
20000450 g     O .data	00000870 .hidden __exp_data
20014f3b g     O .bss	00000001 cuntz_num
0001bbac g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
0001154c g     F .text.itcm	0000013c ElFileSystem::recToFile(Recorder*, int)
0001f024 g     F .text.itcm	00000058 String::trim()
0001f67c g     F .text.itcm	00000048 eeprom_initialize
0000a3c8  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#4}::_FUN(void*)
0001e778  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#2}::_FUN(void*, void*)
00024020 g     F .text.itcm	00000030 .hidden __math_divzero
20004dac g     O .data	00000004 F_CPU_ACTUAL
20014dc4 g     O .bss	00000004 usb_midi_handleSysExComplete
20003e54  w    O .data	0000005c vtable for SDFile
0001efd0 g     F .text.itcm	00000054 String::substring(unsigned int, unsigned int) const
200069a8 g     O .bss	00000004 AudioInputUSB::ready_right
000270fc g     F .text.itcm	000000f8 memmove
200048b8 g     O .data	00000204 step_table
0000aaf8  w    F .text.itcm	0000008c Encoder::isr26()
20014f3e g     O .bss	00000001 last_error
000020e0 g     F .text.itcm	0000002c Cuntzertu::setGateMode(unsigned char)
0000da78 g     F .text.itcm	00000240 Display::drawBattery(unsigned char, unsigned char)
20005a94 g     O .data	00000008 monitorTimer
0001d400 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
00027710 g     F .text.itcm	0000004c _Balloc
0002bb1c g       .ARM.exidx	00000000 __exidx_end
00012174  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
0000a2f0 g     F .text.itcm	00000004 Communicator::setWarningEnabled(bool)
20014f58 g     O .bss	00000001 usb_midi_msg_type
200075f8 g     O .bss	00000004 feedback_accumulator
000010bc g     F .text.itcm	00000038 Canna::setBiquads(AudioFilterBiquad*, AudioFilterBiquad*)
0001ae58 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
200070c8 g     O .bss	0000009c bqMancdStat
000049d8 g     F .text.itcm	00000b58 Cuntzertu::readJSONPrefs(Stream*)
20014f32 g     O .bss	00000001 EventResponder::runningFromYield
000213a8 g     F .text.itcm	0000001c AudioOutputUSB::begin()
0001d76c g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
20005914 g     O .data	00000080 isr_table_gpio2
0001b424 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00005ec8 g     F .text.itcm	00000334 Cuntzertu::deserializeFunction(char const*, int)
000203c0 g     F .text.itcm	00000060 tempmonGetTemp
0001ef58 g     F .text.itcm	0000001c String::operator[](unsigned int)
0001ea50 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
200052a4 g     O .data	00000004 __atexit_recursive_mutex
00028250 g     F .text.itcm	00000008 atol
00026b10 g     F .text.itcm	0000000c __errno
00015890  w    F .text.itcm	00000026 SDFile::isDirectory()
00022d20 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
0001783c g     F .text.itcm	00000176 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00015698  w    F .text.itcm	00000044 File::write(unsigned char const*, unsigned int)
20006160 g     O .bss	00000020 tx_transfer
60001000 g     O .text.headers	00000020 ImageVectorTable
00015b5c  w    F .text.itcm	000000a8 File::~File()
20006a0c g     O .bss	00000004 EventResponder::firstInterrupt
00020ff0 g     F .text.itcm	00000004 usb_transfer_status
00001d18 g     F .text.itcm	00000068 Cuntzertu::setFilterMode(unsigned char)
00022eb8 g     F .text.itcm	00000084 sm_set_pool
20006a9c g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
00017da8 g     F .text.itcm	0000004c ExFatFormatter::writeUpcaseUnicode(unsigned short)
0000b590  w    F .text.itcm	00000090 Encoder::isr37()
000210e8 g     F .text.itcm	0000011c AudioOutputUSB::update()
20006f4c g     O .bss	00000004 __stdio_exit_handler
0001b19c g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00018a58 g     F .text.itcm	00000018 ExFatPartition::rootLength()
20003d00 g     O .data	0000000c vtable for AudioAnalyzePeak
0002ba78 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
20006a84 g     O .bss	00000008 AudioOutputSPDIF3::dma
0001ec1c g     F .text.itcm	00000038 String::String(String const&)
00015950  w    F .text.itcm	00000054 SDFile::setCreateTime(DateTimeFields const&)
00023508 g     F .text.itcm	000000c8 logf
00021718  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
20013c24 g     O .bss	00000014 md2_2
0002b3ec g     F .text.itcm	0000002c _fstat_r
2000443c g     O .data	00000370 digital_pin_to_info_PGM
20014f40 g     O .bss	00000001 lt_pp
00012244 g     F .text.itcm	0000003c byteToCrai(unsigned char, unsigned char*)
200075e4 g     O .bss	00000004 errno
0001d784 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00024758 g     F .text.itcm	00000110 floor
600033ac  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
000187c8 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
0002bb18 g       .text.itcm	00000000 _etext
00016054 g     F .text.itcm	000000dc _spi_dma_rxISR0()
0001a138 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20005ec0 g       .bss	00000000 _sbss
0000f4d0 g     F .text.itcm	0000003e Display::initMenu()
0001a500 g     F .text.itcm	0000005c FatFormatter::writeMbr()
0001d6cc g     F .text.itcm	00000006 sdCsInit(unsigned char)
00001d10 g     F .text.itcm	00000006 Cuntzertu::getFilterMode()
00002054 g     F .text.itcm	0000000a Cuntzertu::setReverbs(AudioEffectFreeverb*, AudioEffectFreeverb*)
00016808 g     F .text.itcm	00000110 SDClass::mediaPresent()
0001c428 g     F .text.itcm	0000000c SdioCard::errorData() const
20006bd8 g     O .bss	00000004 Cuntzertu::freq
000037f0  w    F .text.itcm	00000128 int ArduinoJson::V6215PB2::detail::VariantData::asIntegral<int>() const
000028cc g     F .text.itcm	00000528 Canna::parse(String)
20003f98  w    O .data	00000018 vtable for GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>
00024d04 g     F .text.itcm	00000160 .hidden __aeabi_fadd
20014dd8 g     O .bss	00000004 usb_midi_handleVelocityChange
0001d5d8 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
20014b2c g     O .bss	00000014 t1_1
00018978 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00024d00 g     F .text.itcm	00000164 .hidden __subsf3
00017ea4 g     F .text.itcm	0000052c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
0001f58c g     F .text.itcm	00000024 digitalRead
60003748 g       *ABS*	00000000 _stextload
0001e320 g     F .text.itcm	00000018 AudioStream::receiveReadOnly(unsigned int)
00013234 g     F .text.itcm	000000d8 loop
0000ff34  w    F .text.itcm	0000023c GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::init()
0002003c g     F .text.itcm	0000007a flexpwm_init
0001148c g     F .text.itcm	000000c0 ElFileSystem::readPrefs(Cuntzertu*)
0001f740 g     F .text.itcm	000000ec eepromemu_flash_write
00021674 g     F .text.itcm	0000003c usb_audio_set_feature
00021a34 g     F .text.itcm	000000a4 usb_midi_flush_output
6000199c g     F .text.code	00000004 startup_debug_reset
00020de4 g     F .text.itcm	00000064 usb_config_rx
00012280 g     F .text.itcm	00000294 sona(unsigned char)
20013edc g     O .bss	00000190 msSynth
00003304 g     F .text.itcm	000001e0 Cuntzertu::calcCrais(unsigned char, unsigned char)
00022f3c g     F .text.itcm	00000044 sqrtf
00016a58 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0001d230 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
00021b80 g     F .text.itcm	000003d8 usb_midi_read
0000cab0  w    F .text.itcm	00000574 Encoder::attach_interrupt(unsigned char, Encoder_internal_state_t*)
0000bcd0  w    F .text.itcm	0000008c Encoder::isr10()
0001df5c g     F .text.itcm	0000008c EntropyClass::Initialize()
20014dcc g     O .bss	00000004 usb_midi_handleSystemReset
000110a0 g     F .text.itcm	00000208 ElFileSystem::cuntzToFile(Cuntzertu*, int)
0001dd8c g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
00023888 g     F .text.itcm	00000294 __ieee754_rem_pio2
00014bb4 g     F .text.itcm	0000054c AudioOutputPT8211::isr()
20006a08 g     O .bss	00000004 EventResponder::lastInterrupt
20014f28 g     O .bss	00000002 usb_midi_msg_sysex_len
000010f4 g     F .text.itcm	00000032 Canna::setBiquads(AudioFilterBiquad*, AudioFilterBiquad*, AudioFilterBiquad*)
0001b2d4 g     F .text.itcm	00000028 FsBaseFile::close()
0001636c g     F .text.itcm	00000048 SPIClass::end()
0001fb30 g     F .text.itcm	00000134 memcpy
00026794 g     F .text.itcm	000001b0 __hexnan
00006b10 g     F .text.itcm	00000890 Canna::deserialize(ArduinoJson::V6215PB2::JsonObject)
20003cc4 g     O .data	0000000c vtable for AudioMixer4
000156dc  w    F .text.itcm	00000060 File::available()
2000729c g     O .bss	0000009c bqMancsStat
0001b670 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0001d9a0 g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
20014db0 g     O .bss	00000004 usb_midi_handleRealTimeSystem
20005ec0 g     O .data	00000000 .hidden __TMC_END__
00024050 g     F .text.itcm	0000001e .hidden __math_invalid
0001884c g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
00019250 g     F .text.itcm	00000028 FatFile::peek()
00024c24 g     F .text.itcm	00000022 .hidden __floatsidf
00009400 g     F .text.itcm	00000674 Cuntzertu::writeJSONPrefs(Stream*)
00007fe0 g     F .text.itcm	00000046 Cuntzertu::deserialize(char const*)
20014f37  w    O .bss	00000001 SDFile::name()::zeroterm
20014b10 g     O .bss	00000004 systick_millis_count
00017660 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
0001ec54 g     F .text.itcm	0000003a String::String(char)
20006f90 g     O .bss	0000009c bqMancdDinCrais
000154e0  w    F .text.itcm	0000003c SDFile::truncate(unsigned long long)
0001dd4c g     F .text.itcm	00000040 TwoWire::wait_idle()
00022c40 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
200069f4 g     O .bss	00000004 AudioOutputUSB::left_1st
00024f14 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
00022964 g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20014f52 g     O .bss	00000001 usb_configuration
0001b564  w    F .text.itcm	00000006 SdCardInterface::status()
200140c0 g     O .bss	00000004 old_sul
00022e6c g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0001d498 g     F .text.itcm	00000030 SdioCard::syncDevice()
0001c6d4 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00013e3c g     F .text.itcm	00000824 AudioEffectFreeverb::update()
0000a32c g     F .text.itcm	00000024 Communicator::msgOk(String)
000105e0  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00019278 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00028060 g     F .text.itcm	00000062 __ratio
0001bc98 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
20006914 g     O .bss	00000070 AudioStream::memory_pool_available_mask
00001ccc g     F .text.itcm	00000006 Cuntzertu::getSulProgS()
60003470  w    O .text.progmem	00000018 usb_string_manufacturer_name
000126d0 g     F .text.itcm	000000f8 initCuntz()
20014f16 g     O .bss	00000002 AudioOutputPT8211::block_left_offset
00026b1c g     F .text.itcm	00000010 malloc
00015d04 g     F .text.itcm	00000088 BandLimitedWaveform::insert_step(int, bool, int)
2001406c g     O .bss	0000001c myEnc
600033fc  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
0001672c g     F .text.itcm	000000dc SDClass::format(int, char, Print&)
20003e30  w    O .data	00000024 vtable for FsFile
0002039c  w    F .text.itcm	0000000a _fstat
200140c4 g     O .bss	00000014 outl_1
0001dba0  w    F .text.itcm	0000001e TwoWire::read()
000147a8 g     F .text.itcm	000000ba AudioFilterBiquad::update()
000271f4 g     F .text.itcm	00000040 __assert_func
00024e6c g     F .text.itcm	0000001c .hidden __aeabi_i2f
00015fdc  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
20014f14 g     O .bss	00000002 AudioOutputUSB::offset_1st
20000e08 g     O .data	000000c8 __mprec_tens
60001fc0 g     F .text.code	000000e8 usb_init
00006698 g     F .text.itcm	00000478 Crai::deserialize(ArduinoJson::V6215PB2::JsonObject)
0001b220 g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
20014f10 g     O .bss	00000002 AudioStream::memory_pool_first_mask
0001ed38 g     F .text.itcm	0000002c String::String(int, unsigned char)
20201c60 g     O .bss.dma	00000004 usb_audio_sync_feedback
2001418c g     O .bss	00000014 outriv_2
00023698 g     F .text.itcm	00000130 __kernel_cos
0001260c g     F .text.itcm	000000c4 playNoda()
0001b56c  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
0000c1bc  w    F .text.itcm	0000008c Encoder::isr1()
0000f378 g     F .text.itcm	000000cc Display::showLogo(String)
0000c018  w    F .text.itcm	0000008c Encoder::isr4()
20013bfc g     O .bss	00000014 md2_0
00015acc  w    F .text.itcm	0000008e SDFile::seek(unsigned long long, int)
20006e10 g     O .bss	00000004 __malloc_top_pad
20014b14 g     O .bss	00000004 systick_safe_read
000119d8 g     F .text.itcm	00000044 Recorder::serialize(Stream*)
00015ef8 g     F .text.itcm	0000004c BandLimitedWaveform::generate_pulse(unsigned long, unsigned long, int)
20005aa4 g     O .data	00000012 sulProgSData
00007f98 g     F .text.itcm	00000046 Cuntzertu::deserialize(Stream*)
0001dc44 g     F .text.itcm	00000108 TwoWire::force_clock()
0000a38c g     F .text.itcm	00000020 Communicator::msgWarning(String)
00002060 g     F .text.itcm	00000080 Cuntzertu::beginTimer()
20003fb0  w    O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<void (&)(), void (*)(), void>(void (&)())::vt
00002f00 g     F .text.itcm	00000084 Cuntzertu::setPuntu(unsigned char)
aaaaafff g       *ABS*	00000000 _flexram_bank_config
00002e48 g     F .text.itcm	000000b8 Cuntzertu::setFini(float)
000179b4 g     F .text.itcm	000000e4 ExFatFile::truncate()
200052ac g     O .data	00000000 .hidden __dso_handle
0001f82c g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
00026ae4 g     F .text.itcm	0000002c itoa
00024c04 g     F .text.itcm	0000001e .hidden __aeabi_ui2d
000120d4  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
0002a1a4 g     F .text.itcm	00000008 _localeconv_r
0001d714 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00012028  w    F .text.itcm	00000088 SPISlave_T4<&SPI1, (SPI_BITS)8>::SLAVE_ISR()
0002b5a8 g     F .text.itcm	000002f4 __sfvwrite_r
00027964 g     F .text.itcm	0000005c __i2b
0001eeb4 g     F .text.itcm	00000028 operator+(StringSumHelper const&, unsigned char)
20000000 g       .data	00000000 _sdata
20014da4 g     O .bss	00000004 usb_midi_handleNoteOn
0001a678 g     F .text.itcm	000001c4 FatFormatter::makeFat32()
00009ad8 g     F .text.itcm	00000810 Cuntzertu::parse(String)
600035e4 g     O .text.progmem	00000155 usb_config_descriptor_480
00001538 g     F .text.itcm	00000016 Canna::setMIDI(unsigned char, unsigned char, unsigned char, unsigned char)
00024f44 g     F .text.itcm	000002c8 .hidden __udivmoddi4
00011a80 g     F .text.itcm	000003c8 Recorder::parse(String)
00024980 g     F .text.itcm	00000000 .hidden __aeabi_drsub
000121d4  w    F .text.itcm	00000064 AudioSynthWaveform2::AudioSynthWaveform2()
0001d764 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00018b24 g     F .text.itcm	00000034 FatFile::addCluster()
00028ee4 g     F .text.itcm	00000024 _sbrk_r
000005f8 g     F .text.itcm	00000478 Biquad::sync(unsigned short)
0000a2e8 g     F .text.itcm	00000008 Communicator::Communicator(Stream*)
20013bc0 g     O .bss	00000014 md1_0
0001c4a0 g     F .text.itcm	0000001c SdioCard::type() const
00003648  w    F .text.itcm	00000088 float ArduinoJson::V6215PB2::detail::VariantData::asFloat<float>() const
00002028 g     F .text.itcm	00000014 Cuntzertu::setBiquads(AudioFilterBiquad*, AudioFilterBiquad*)
60001990 g     F .text.code	00000002 startup_default_early_hook
200003c0  w    O .data	00000048 ArduinoJson::V6215PB2::detail::FloatTraits<double, 8u>::negativeBinaryPowersOfTen()::factors
6000164c g     F .text.code	00000028 ResetHandler
00023f20 g     F .text.itcm	0000001e .hidden __math_invalidf
00022564 g     F .text.itcm	00000020 usb_serial_getchar
00015490  w    F .text.itcm	00000050 SDFile::name()
20014d80 g     O .bss	00000008 usb_cdc_line_coding
000112a8 g     F .text.itcm	00000094 ElFileSystem::cuntzFromFileJson(Cuntzertu*, int, bool)
0001f538 g     F .text.itcm	00000054 digitalWrite
20006a10 g     O .bss	00000004 EventResponder::lastYield
00016a30 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
0002b468 g     F .text.itcm	0000002c _read_r
0000b1a8  w    F .text.itcm	0000008c Encoder::isr30()
200075b0 g     O .bss	0000000c command
000036d0  w    F .text.itcm	00000120 unsigned char ArduinoJson::V6215PB2::detail::VariantData::asIntegral<unsigned char>() const
0000183c g     F .text.itcm	00000080 Cuntzertu::setVol(float)
00010c14 g     F .text.itcm	000001f8 ElFileSystem::copy(int, int)
00021960 g     F .text.itcm	000000c4 usb_midi_configure
20006a68 g     O .bss	00000004 AudioOutputPT8211::block_left_2nd
00010560  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
0001b5f0  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00017d38 g     F .text.itcm	0000002e ExFatFormatter::syncUpcase()
00026ad4 g     F .text.itcm	00000010 isspace
0000b3e0  w    F .text.itcm	00000090 Encoder::isr34()
0001551c  w    F .text.itcm	00000054 SDFile::setModifyTime(DateTimeFields const&)
000032fc g     F .text.itcm	00000006 Cuntzertu::getPreferredCuntz()
0002a1ac g     F .text.itcm	000000c6 _fclose_r
20013e2c g     O .bss	00000014 ms1_1
200075e8 g     O .bss	00000010 extmem_smalloc_pool
0000d404  w    F .text.itcm	00000672 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::rect(int, int, int, int, unsigned char)
20006e08 g     O .bss	00000004 __malloc_max_sbrked_mem
0001bd9c g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
20014f31 g     O .bss	00000001 AudioOutputUSB::update_responsibility
00015790  w    F .text.itcm	0000001a SDFile::position()
0001f5b0 g     F .text.itcm	00000070 pinMode
00002698 g     F .text.itcm	0000022c Canna::playCrai(unsigned char, unsigned char)
0001ef74 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00002048 g     F .text.itcm	0000000a Cuntzertu::setCannaMixers(AudioMixer4*, AudioMixer4*)
20005868 g     O .data	00000005 crais_ms_med
000227a8 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
000237c8 g     F .text.itcm	000000b0 __kernel_sin
00024c48 g     F .text.itcm	00000042 .hidden __extendsfdf2
00001a40 g     F .text.itcm	00000130 Cuntzertu::setVolBilMs(float, float)
0001e468 g     F .text.itcm	00000020 AudioConnection::connect(AudioStream&, unsigned char, AudioStream&, unsigned char)
0002498c g     F .text.itcm	00000276 .hidden __adddf3
600016fc g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
200069a4 g     O .bss	00000004 AudioInputUSB::ready_left
200069c4 g     O .bss	00000008 AudioInputTDM2::dma
200050f0 g     O .data	00000140 Wire2
20014dc8 g     O .bss	00000004 usb_midi_handleSysExPartial
60035400 g     O .text.csf	00000c00 hab_csf
00015764  w    F .text.itcm	0000002c File::peek()
200075ac g     O .bss	00000004 com
0001aeb0 g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
000163b8  w    F .text.itcm	000000c8 SDClass::open(char const*, unsigned char)
00027ec8 g     F .text.itcm	000000c2 __b2d
0002bb14 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00013d08  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
00010798 g     F .text.itcm	00000090 ElFileSystem::ElFileSystem()
20014f56 g     O .bss	00000001 usb_midi_msg_data1
000203a8  w    F .text.itcm	00000004 _isatty
00013164 g     F .text.itcm	00000018 parse(String)
20006a04 g     O .bss	00000004 EventResponder::firstYield
0000b470  w    F .text.itcm	00000090 Encoder::isr35()
0001e040 g     F .text.itcm	0000012c EntropyClass::rnorm(float, float)
00022784  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
000109f4 g     F .text.itcm	000001a0 ElFileSystem::listaFiles(bool)
0001da44 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
000105ac  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00000280  w    F .text.itcm	00000374 ArduinoJson::V6215PB2::detail::parseNumber(char const*, ArduinoJson::V6215PB2::detail::VariantData&)
200075c0 g     O .bss	00000004 efs
00028630 g     F .text.itcm	000003d8 _realloc_r
000158b8  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
000272f0 g     F .text.itcm	00000048 __libc_init_array
0001fcf0 g     F .text.itcm	0000034c dtostrf
00015570  w    F .text.itcm	00000046 SDFile::rewindDirectory()
0001db94  w    F .text.itcm	0000000c TwoWire::available()
00011850 g     F .text.itcm	000000a4 Recorder::getSample()
20003dd4 g     O .data	00000030 vtable for HardwareSerialIMXRT
0001723c g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0001c434 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20004098 g     O .data	00000100 __hexdig
00015e30 g     F .text.itcm	000000c8 BandLimitedWaveform::new_step_check_pulse(unsigned long, unsigned long, int)
000175b0 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
20005894 g     O .data	00000080 isr_table_gpio1
00021610 g     F .text.itcm	00000064 usb_audio_get_feature
0002b540 g     F .text.itcm	00000066 _fputwc_r
20000de0 g     O .data	00000028 __mprec_bigtens
0000a9e0  w    F .text.itcm	0000008c Encoder::isr24()
00027814 g     F .text.itcm	000000b0 __s2b
0001c0cc  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
000203b8  w    F .text.itcm	00000004 abort
00021708  w    F .text.itcm	00000004 usb_serial_class::clear()
00024c04 g     F .text.itcm	0000001e .hidden __floatunsidf
0002035c  w    F .text.itcm	00000034 _sbrk
6002f264 g       *ABS*	00000000 _sdataload
00027ccc g     F .text.itcm	00000042 __mcmp
00015cb4 g     F .text.itcm	00000050 BandLimitedWaveform::lookup(int)
0001fa1c g     F .text.itcm	00000104 attachInterrupt
20003ed4 g     O .data	00000030 vtable for SDClass
200069ec g     O .bss	00000008 AudioOutputTDM::dma
200052a8 g     O .data	00000004 __brkval
20014f51 g     O .bss	00000001 usb_cdc_line_rtsdtr
0001ee44 g     F .text.itcm	00000008 String::append(String const&)
20013b3c g     O .bss	00000040 gWDT_trng_prior
00015198 g     F .text.itcm	000000b0 AudioOutputPT8211::config_i2s()
20014128 g     O .bss	00000014 outr_1
600020fc g     F .text.code	00000000 _init
000222b4 g     F .text.itcm	00000002 usb_serial_reset
00018bd0 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0001ec90 g     F .text.itcm	0000000e String::~String()
00028df8 g     F .text.itcm	0000001c strtol
0001f8e4 g     F .text.itcm	00000134 eeprom_write_byte
20001f18 g     O .data	000000e0 .hidden __sincosf_table
20014f4e g     O .bss	00000001 usb_audio_sync_nbytes
60001844 g     F .text.code	000000f8 AudioStream::initialize_memory(audio_block_struct*, unsigned int)
00016538  w    F .text.itcm	00000054 SDClass::remove(char const*)
00015468  w    F .text.itcm	00000028 SDFile::close()
00023d28 g     F .text.itcm	000001bc cosf
0000c248  w    F .text.itcm	00000430 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::write(unsigned char)
0001ec1c g     F .text.itcm	00000038 String::String(String const&)
0000b118  w    F .text.itcm	00000090 Encoder::isr53()
00015a44  w    F .text.itcm	00000040 SDFile::~SDFile()
2001433c g     O .bss	000007d0 ser_buffer
0002baa8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
0001ee68 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
00024d00 g     F .text.itcm	00000164 .hidden __aeabi_fsub
6000348c g     O .text.progmem	00000155 usb_config_descriptor_12
00000020 g     F .text.itcm	000000c0 irq_gpio6789
000240b0 g     F .text.itcm	00000690 __kernel_rem_pio2
20003f04 g     O .data	00000024 vtable for TwoWire
00025210 g     F .text.itcm	00000e70 _strtod_l
0002675c g     F .text.itcm	00000036 __match
00001cd4 g     F .text.itcm	00000014 Cuntzertu::setSulProgZ(unsigned char)
0001d6ec g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
0000a954  w    F .text.itcm	0000008c Encoder::isr23()
20014f80 g       .bss	00000000 _ebss
0001ced0 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00014864 g     F .text.itcm	00000046 AudioFilterBiquad::setCoefficients(unsigned long, int const*)
20013e40 g     O .bss	00000014 ms1_2
000018f8 g     F .text.itcm	0000000a Cuntzertu::getBilMd()
00008028  w    F .text.itcm	00000310 void ArduinoJson::V6215PB2::detail::TextFormatter<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >::writeFloat<double>(double)
60001750 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
00010534  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
0000fef8 g     F .text.itcm	00000008 Display::update()
0001edc4 g     F .text.itcm	0000007e String::append(char const*, unsigned int)
0000210c g     F .text.itcm	00000006 Cuntzertu::getGateMode()
000278c4 g     F .text.itcm	00000040 __hi0bits
00016998 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
00002114 g     F .text.itcm	00000024 Cuntzertu::setSul(float)
0001df44 g     F .text.itcm	0000000c lpi2c3_isr()
000269e0 g     F .text.itcm	00000004 utoa
00011688 g     F .text.itcm	000000ec ElFileSystem::recFromFile(Recorder*, int, bool)
0001211c  w    F .text.itcm	00000058 AudioFilterBiquad::AudioFilterBiquad()
00017704 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
00000e40 g     F .text.itcm	00000100 Canna::Canna(unsigned char)
20206360 g       .bss.dma	00000000 _heap_start
20004c84 g     O .data	00000001 String::zerotermination
0000ab84  w    F .text.itcm	0000008c Encoder::isr27()
20006dd8 g     O .bss	00000001 __lock___malloc_recursive_mutex
00024e98 g     F .text.itcm	0000007c .hidden __floatdisf
20014d58 g     O .bss	00000020 usb1
0000bde8  w    F .text.itcm	0000008c Encoder::isr12()
000163b4  w    F .text.itcm	00000002 SDClass::~SDClass()
20014b54 g     O .bss	00000014 t2_0
6000335c  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
0001eca0 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
00013d08  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20006e14 g     O .bss	00000138 __sf
00013a78 g     F .text.itcm	0000024a AudioSynthWaveform2::update()
200069fc g     O .bss	00000004 AudioOutputUSB::right_1st
00001910 g     F .text.itcm	00000130 Cuntzertu::setVolBilT(float, float)
0001b8d0 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000073a0 g     F .text.itcm	00000bf8 Cuntzertu::deserialize(ArduinoJson::V6215PB2::JsonObject)
00010830 g     F .text.itcm	000001c4 ElFileSystem::execute(int)
00015b5c  w    F .text.itcm	000000a8 File::~File()
00000006 g       *ABS*	00000000 _itcm_block_count
20005f40 g     O .bss	00000020 endpoint0_transfer_data
0001a8f0 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0001d864 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
20013b7c g     O .bss	00000004 inact_timer
0001fc68 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
000200b8 g     F .text.itcm	000000f4 pwm_init
60001674 g     F .text.code	00000054 set_audioClock(int, long, unsigned long, bool)
0002498c g     F .text.itcm	00000276 .hidden __aeabi_dadd
00021204 g     F .text.itcm	00000150 usb_audio_receive_callback
200075cc g     O .bss	00000004 enc_pos
0000203c g     F .text.itcm	0000000a Cuntzertu::setOutAmps(AudioAmplifier*, AudioAmplifier*)
0001ec90 g     F .text.itcm	0000000e String::~String()
60036000 g       .text.csf	00000000 __text_csf_end
00024010 g     F .text.itcm	00000010 .hidden __math_oflow
60001e34 g     F .text.code	0000005c usb_pll_start
00027b1c g     F .text.itcm	000000c0 __pow5mult
000194a8 g     F .text.itcm	00000090 FatFile::rmdir()
0001df50 g     F .text.itcm	0000000c lpi2c4_isr()
00024c8c g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20014164 g     O .bss	00000014 outr_4b
0001ad78 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
20013bb8 g     O .bss	00000006 lt_pkt
0001c2fc  w    F .text.itcm	00000002 SdioCard::end()
20006a6c g     O .bss	00000004 AudioOutputPT8211::block_right_1st
000165c8  w    F .text.itcm	00000036 SDClass::exists(char const*)
0000f510 g     F .text.itcm	000007b4 Display::go(bool, int, bool)
20006984 g     O .bss	00000004 AudioStream::unused
20005f20 g     O .bss	00000020 endpoint0_transfer_ack
20014d88 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
00020fac g     F .text.itcm	00000028 usb_transmit
0001e178 g     F .text.itcm	00000064 software_isr()
000086b8 g     F .text.itcm	00000d48 Cuntzertu::serialize(Stream*)
0001e748 g     F .text.itcm	00000020 systick_isr
20006f70 g     O .bss	00000020 ampR
00027344 g     F .text.itcm	00000002 __retarget_lock_release_recursive
20006910 g     O .bss	00000004 AudioStream::first_update
20004e00 g     O .data	00000010 Serial
20014f0a g     O .bss	00000002 AudioStream::memory_used_max
0001e51c g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
000017d0 g     F .text.itcm	00000064 Cuntzertu::syncBT1(Stream*)
0001ed64 g     F .text.itcm	0000000e String::operator=(String const&)
20000ed0 g     O .data	00001048 .hidden __pow_log_data
000120b0  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
0001e9c8  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
0001b3ac g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
20014f4d g     O .bss	00000001 usb_audio_receive_setting
60001990  w    F .text.code	00000002 startup_early_hook
0000a2e8 g     F .text.itcm	00000008 Communicator::Communicator(Stream*)
00024088 g     F .text.itcm	00000028 .hidden __math_check_oflow
00017270 g     F .text.itcm	00000092 ExFatFile::addCluster()
20003e04  w    O .data	0000002c vtable for File
0001b77c g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
20013c38 g     O .bss	00000014 md3_0
00016600  w    F .text.itcm	000000f0 SDClass::usedSize()
00014660 g     F .text.itcm	00000148 AudioEffectFreeverb::AudioEffectFreeverb()
00022498 g     F .text.itcm	00000044 usb_serial_peekchar
0000adb8  w    F .text.itcm	00000090 Encoder::isr47()
000010b4 g     F .text.itcm	00000006 Canna::setMixer(AudioMixer4*)
000018ec g     F .text.itcm	0000000a Cuntzertu::getBilMs()
00023618 g     F .text.itcm	00000080 cos
00028450 g     F .text.itcm	0000000c __sfp_lock_acquire
00028470 g     F .text.itcm	00000000 memchr
0001ae38 g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
0000ae48  w    F .text.itcm	00000090 Encoder::isr48()
0000b980  w    F .text.itcm	00000090 Encoder::isr44()
20013e14 g     O .bss	00000004 mon_mode
0001f14c g     F .text.itcm	000002f0 set_arm_clock
20014b0c g     O .bss	00000004 systick_cycle_count
00011774 g     F .text.itcm	0000001c Recorder::Recorder()
20005ac4 g     O .data	00000016 usb_string_serial_number_default
20003cdc  w    O .data	0000000c vtable for SPISlave_T4<&SPI1, (SPI_BITS)8>
00028aa8 g     F .text.itcm	0000020c _free_r
0001bf3c g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
20014dc0 g     O .bss	00000004 usb_midi_handleStop
0001c144 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0001ca1c g     F .text.itcm	000000b8 SdioCard::readStop()
00015f44 g     F .text.itcm	00000088 BandLimitedWaveform::init_pulse(unsigned long, unsigned long)
0001b574  w    F .text.itcm	00000004 SharedSpiCard::type() const
00027348 g     F .text.itcm	0000000c __locale_mb_cur_max
00001128 g     F .text.itcm	00000410 Canna::update(float, float, float, float)
0002a418 g     F .text.itcm	00000016 _wcsrtombs_r
00000e40 g     F .text.itcm	00000100 Canna::Canna(unsigned char)
000228fc g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00022d1c g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20006c44 g     O .bss	00000190 __atexit0
0000b620  w    F .text.itcm	00000090 Encoder::isr38()
00001ca0 g     F .text.itcm	0000000a Cuntzertu::getFini()
00021710  w    F .text.itcm	00000004 usb_serial_class::flush()
00017df4 g     F .text.itcm	000000b0 ExFatFormatter::writeUpcase(unsigned long)
00024988 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20014d9c g     O .bss	00000004 usb_midi_handleControlChange
0001e768 g     F .text.itcm	0000000c IRQHandler_Serial5
20005824 g     O .data	00000004 __malloc_sbrk_base
0001eb64  w    F .text.itcm	00000004 usb_serial_class::read()
20006a5c g     O .bss	00000008 AudioOutputI2SOct::dma
0001a20c g     F .text.itcm	00000110 FatFile::remove()
20014150 g     O .bss	00000014 outr_4
00023f40 g     F .text.itcm	00000080 sin
00024c8c g     F .text.itcm	0000006a .hidden __floatundidf
0001ed08 g     F .text.itcm	0000002e String::String(unsigned char)
000203ac  w    F .text.itcm	00000006 _lseek
000203b4  w    F .text.itcm	00000004 __cxa_pure_virtual
00027bdc g     F .text.itcm	000000f0 __lshift
00018e10 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00020f7c g     F .text.itcm	00000030 usb_prepare_transfer
000227d0 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
0001b578  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
000201d0 g     F .text.itcm	0000018c unused_interrupt_vector
200069ac g     O .bss	00000004 AudioInputUSB::incoming_left
20014b7c g     O .bss	00000014 t2_2
00024e6c g     F .text.itcm	0000001c .hidden __floatsisf
000028c4 g     F .text.itcm	00000006 Canna::playCrai(unsigned char)
20014f00 g     O .bss	00000004 usb_timer0_callback
60001e90 g     F .text.code	00000130 tempmon_init
00019b60 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00010f9c g     F .text.itcm	00000104 ElFileSystem::newFile(String)
200069dc g     O .bss	00000010 AudioOutputPWM::dma
0002a000 g     F .text.itcm	00000088 __register_exitproc
0001e780  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#4}::_FUN(void*)
0001b580 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0001ed74 g     F .text.itcm	0000002a String::operator=(String&&)
0001e338 g     F .text.itcm	00000046 AudioStream::receiveWritable(unsigned int)
00017144 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
000010ac g     F .text.itcm	00000006 Canna::setSynth(AudioSynthWaveform2*)
0001f6c4 g     F .text.itcm	0000007c eeprom_read_byte
000269e4 g     F .text.itcm	0000008a strncmp
0000a468  w    F .text.itcm	0000008c Encoder::isr14()
00019aa4 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
20005a9c g     O .data	00000007 scala
00017764 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
0001a55c g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000af68  w    F .text.itcm	00000090 Encoder::isr50()
0001ee78 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
20007338 g     O .bss	0000009c bqOutL
000120d4  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
000224f4 g     F .text.itcm	00000070 usb_serial_flush_input
0001890c g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
000279c0 g     F .text.itcm	0000015c __multiply
20006340 g     O .bss	00000008 Entropy
00022f80 g     F .text.itcm	0000057c pow
00022584 g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0001b9b8 g     F .text.itcm	000001f4 SharedSpiCard::begin(SdSpiConfig)
20006a14 g     O .bss	00000008 AudioOutputI2S2::dma
20003dc8 g     O .data	0000000c vtable for AudioSynthWaveform2
00026a70 g     F .text.itcm	00000064 strncpy
0002284c g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20006de0 g     O .bss	00000028 __malloc_current_mallinfo
200069b4 g     O .bss	00000008 AudioInputI2S2::dma
20006a70 g     O .bss	00000004 AudioOutputPT8211::block_right_2nd
20005ab8 g     O .data	0000000c sulProgZData
20003b00 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
00027f8c g     F .text.itcm	000000d4 __d2b
00011a1c g     F .text.itcm	00000064 Recorder::deserialize(Stream*, bool)
0001c1ac g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
20005850 g     O .data	00000005 crais_md_med
20003ce8 g     O .data	0000000c vtable for AudioAmplifier
0001c2f4  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
600020a8 g     F .text.code	00000054 _reboot_Teensyduino_
0001c490  w    F .text.itcm	0000000e SdioCard::~SdioCard()
200075a8 g     O .bss	00000004 c
60001994 g     F .text.code	00000002 startup_default_middle_hook
000282d0 g     F .text.itcm	00000018 realloc
0001b60c g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0001bc24 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
0000f1e0  w    F .text.itcm	00000198 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::update()
00011380 g     F .text.itcm	0000010c ElFileSystem::savePrefs(Cuntzertu*)
0001c948 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
0000bbb8  w    F .text.itcm	0000008c Encoder::isr8()
000206a4 g     F .text.itcm	00000740 usb_isr
000272d8 g     F .text.itcm	0000000c __cxa_atexit
00016af4 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0001e550 g     F .text.itcm	00000044 AudioStream::update_setup()
0001e380 g     F .text.itcm	00000018 AudioConnection::AudioConnection()
0000baa0  w    F .text.itcm	0000008c Encoder::isr6()
200140d8 g     O .bss	00000014 outl_2
0002b244 g     F .text.itcm	00000024 _close_r
0001aac4  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20014da0 g     O .bss	00000004 usb_midi_handleNoteOff
00024c24 g     F .text.itcm	00000022 .hidden __aeabi_i2d
00001550 g     F .text.itcm	00000280 Cuntzertu::Cuntzertu()
00001834 g     F .text.itcm	00000006 Cuntzertu::getNome()
0001e828 g     F .text.itcm	00000104 IntervalTimer::beginCycles(teensy::inplace_function<void (), 16u, 8u>, unsigned long)
0001b808 g     F .text.itcm	0000006e SharedSpiCard::readStop()
00015878  w    F .text.itcm	00000018 SDFile::peek()
0001d80c g     F .text.itcm	00000056 FsCache::sync()
20006a94 g     O .bss	00000008 AudioOutputPT8211_2::dma
0001133c g     F .text.itcm	00000044 ElFileSystem::cuntzFromFile(Cuntzertu*, String, bool, char)
20013b80 g     O .bss	00000038 lMixer
0000dcb8 g     F .text.itcm	00000010 Display::refreshBattery()
20014178 g     O .bss	00000014 outriv_1
00015fcc g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
0000ff00 g     F .text.itcm	00000032 Display::setEnabled(bool)
20004db0 g     O .data	00000050 SPI
20005994 g     O .data	00000080 isr_table_gpio3
0002709c g     F .text.itcm	00000060 memcmp
20003d7c  w    O .data	00000028 vtable for usb_serial_class
0001d7a8 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000ad28  w    F .text.itcm	00000090 Encoder::isr46()
20014b18 g     O .bss	00000014 t1_0
0000bb2c  w    F .text.itcm	0000008c Encoder::isr7()
0001ebe0 g     F .text.itcm	0000003a String::String(char const*)
0002733c g     F .text.itcm	00000002 __retarget_lock_close_recursive
00001d80 g     F .text.itcm	00000284 Cuntzertu::setVerb(float, float, float)
00024e88 g     F .text.itcm	0000008c .hidden __floatundisf
0001d6d4 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
200142b4 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20014f3f g     O .bss	00000001 last_error_mem
0002a274 g     F .text.itcm	000000cc __swsetup_r
0002520c  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
000173b8 g     F .text.itcm	0000005e ExFatFile::rmdir()
20006a2c g     O .bss	00000008 AudioInputI2SHex::dma
20013e90 g     O .bss	00000014 ms3_0
0001bd34 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
000280c4 g     F .text.itcm	0000005c __copybits
00012a8c g     F .text.itcm	00000044 restore()
0001eb6c g     F .text.itcm	00000074 Stream::readBytes(char*, unsigned int)
2000541c g     O .data	00000408 __malloc_av_
00024e64 g     F .text.itcm	00000024 .hidden __aeabi_ui2f
20006c40 g     O .bss	00000004 __atexit
200141c8 g     O .bss	00000024 peak
000158d0  w    F .text.itcm	00000014 SDFile::flush()
00028e3c g     F .text.itcm	00000022 __sread
00010170 g     F .text.itcm	000003c4 Display::Display()
20013ea4 g     O .bss	00000038 msMixer
0000a580  w    F .text.itcm	0000008c Encoder::isr16()
20005f60 g     O .bss	00000020 rx_transfer
00022618 g     F .text.itcm	00000094 usb_serial_flush_output
20013e68 g     O .bss	00000014 ms2_1
00015d8c g     F .text.itcm	000000a4 BandLimitedWaveform::process_active_steps(unsigned long)
2000698c g     O .bss	00000008 AudioInputI2S::dma
000276f8 g     F .text.itcm	0000000c __malloc_lock
000228e0 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
0001841c g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
20005c00 g     O .data	000002c0 _VectorsRam
20003cf4 g     O .data	0000000c vtable for AudioOutputUSB
0001d7bc g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
0001a388 g     F .text.itcm	00000120 FatFormatter::initFatDir(unsigned char, unsigned long)
0002b398 g     F .text.itcm	00000054 _fflush_r
00028258 g     F .text.itcm	00000078 _calloc_r
0001ef2c g     F .text.itcm	0000002c String::equals(char const*) const
00016130 g     F .text.itcm	00000234 SPIClass::begin()
00026944 g     F .text.itcm	0000009c __utoa
00001ce8 g     F .text.itcm	00000028 Cuntzertu::setSulProgS(unsigned char)
00019ea0 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20014f5a g     O .bss	00000001 yield_active_check_flags
00017550 g     F .text.itcm	0000005e ExFatFile::sync()
00027340 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20014f53 g     O .bss	00000001 usb_high_speed
000192bc g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0001c880 g     F .text.itcm	0000007c SdioCard::isBusy()
20006a4c g     O .bss	00000008 AudioInputI2SQuad::dma
2000702c g     O .bss	0000009c bqMancdDinFin
00027234 g     F .text.itcm	000000a4 memset
00023880 g     F .text.itcm	00000006 __ieee754_sqrtf
200140ec g     O .bss	00000014 outl_4
0001fb20 g     F .text.itcm	00000010 main
200069cc g     O .bss	00000008 AudioOutputI2S::dma
000034e4 g     F .text.itcm	00000010 Cuntzertu::setCuntz(unsigned char)
20006e0c g     O .bss	00000004 __malloc_max_total_mem
000018e0 g     F .text.itcm	0000000a Cuntzertu::getVolT()
00018554 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
2000588c g     O .data	00000008 encoderTimer
00027338 g     F .text.itcm	00000002 __retarget_lock_init_recursive
00011eb8 g     F .text.itcm	00000170 monitoring()
20201e00 g     O .bss.dma	00000155 usb_descriptor_buffer
00024e98 g     F .text.itcm	0000007c .hidden __aeabi_l2f
0000b7d0  w    F .text.itcm	00000090 Encoder::isr41()
0001c214 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
0001dfe8 g     F .text.itcm	00000058 EntropyClass::available()
00017a98 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0001d900 g     F .text.itcm	000000a0 lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
2000750c g     O .bss	0000009c bqTumbuStat2
00018c10 g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
000159a4  w    F .text.itcm	0000004c SDFile::available()
00028ec0 g     F .text.itcm	00000008 __sclose
20003dbc g     O .data	0000000c vtable for AudioEffectFreeverb
000061fc  w    F .text.itcm	0000006a ArduinoJson::V6215PB2::detail::VariantData* ArduinoJson::V6215PB2::detail::variantGetMember<ArduinoJson::V6215PB2::detail::StaticStringAdapter>(ArduinoJson::V6215PB2::detail::VariantData const*, ArduinoJson::V6215PB2::detail::StaticStringAdapter)
000216b0 g     F .text.itcm	00000058 usb_init_serialnumber
600021e0 g       .text.code	00000000 __init_array_end
00012238 g     F .text.itcm	0000000c getCharge()
0002a558 g     F .text.itcm	00000cec _dtoa_r
00026b3c g     F .text.itcm	00000560 _malloc_r
0001be6c g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
0000bf8c  w    F .text.itcm	0000008c Encoder::isr3()
00028ec8 g     F .text.itcm	0000001a __ascii_wctomb
20014db4 g     O .bss	00000004 usb_midi_handleSongPosition
0001f07c g     F .text.itcm	0000000a String::toInt() const
0000aed8  w    F .text.itcm	00000090 Encoder::isr49()
20014f4f g     O .bss	00000001 usb_audio_sync_rshift
00015454  w    F .text.itcm	00000012 SDFile::isOpen()
00011774 g     F .text.itcm	0000001c Recorder::Recorder()
0000b6b0  w    F .text.itcm	00000090 Encoder::isr39()
0001b19c g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00024c9c g     F .text.itcm	0000005a .hidden __aeabi_l2d
20006bdc g     O .bss	00000004 FatVolume::m_cwv
20006a34 g     O .bss	00000008 AudioInputI2SOct::dma
0000a724  w    F .text.itcm	0000008c Encoder::isr19()
00001cbc g     F .text.itcm	00000006 Cuntzertu::getPuntu()
000121d4  w    F .text.itcm	00000064 AudioSynthWaveform2::AudioSynthWaveform2()
20003fd0  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0001e67c g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
20014d98 g     O .bss	00000004 usb_midi_handleContinue
20014f57 g     O .bss	00000001 usb_midi_msg_data2
00016364 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0001f4e4 g     F .text.itcm	00000054 micros
200073d4 g     O .bss	0000009c bqOutR
00024e88 g     F .text.itcm	0000008c .hidden __aeabi_ul2f
00014a34 g     F .text.itcm	000000f0 AudioMixer4::update()
00017418 g     F .text.itcm	00000138 ExFatFile::syncDir()
2001413c g     O .bss	00000014 outr_2
00012514 g     F .text.itcm	000000f8 setCannas()
200075bc g     O .bss	00000004 d
00028a08 g     F .text.itcm	000000a0 _malloc_trim_r
0000bf00  w    F .text.itcm	0000008c Encoder::isr2()
0002b94c g     F .text.itcm	00000106 _wcsnrtombs_l
60003488 g     O .text.progmem	00000004 string0
000225b0 g     F .text.itcm	00000018 usb_serial_write
00002010 g     F .text.itcm	0000000a Cuntzertu::getVerbDamp()
00000b6c g     F .text.itcm	000002d0 Crai::parse(String)
0000fd30 g     F .text.itcm	000001c8 Display::pollEncoder()
60001998  w    F .text.code	00000002 startup_late_hook
00020640 g     F .text.itcm	00000038 usb_start_sof_interrupts
00024070 g     F .text.itcm	00000012 .hidden __math_check_uflow
0001c2ac g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
00002df4 g     F .text.itcm	00000050 Canna::sync()
0002170c  w    F .text.itcm	00000004 usb_serial_class::available()
00027368 g     F .text.itcm	000002dc strcmp
0000f444 g     F .text.itcm	0000008c Display::move(int)
0000c130  w    F .text.itcm	0000008c Encoder::isr0()
00019798 g     F .text.itcm	0000000c FatFile::sync()
20014f54 g     O .bss	00000001 usb_midi_msg_cable
00013cc4 g     F .text.itcm	00000042 AudioAnalyzePeak::update()
0001a83c g     F .text.itcm	000000b4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
0001658c  w    F .text.itcm	0000003a SDClass::mkdir(char const*)
200141b4 g     O .bss	00000014 outriv_4
20000000 g     O .data	00000380 endpoint_queue_head
6000344c  w    O .text.progmem	00000024 usb_string_product_name
0001f43c g     F .text.itcm	000000a8 delay
0002baa8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
20014f1a g     O .bss	00000002 dma_channel_allocated_mask
00016a0c g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
0002bb10 g     F .fini	00000000 _fini
0001eda0 g     F .text.itcm	00000022 String::operator=(char const*)
00015fcc g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
20014bc8 g     O .bss	00000190 tSynth
0001dbdc g     F .text.itcm	0000002a TwoWire::write(unsigned char)
0001b6fc g     F .text.itcm	0000007e SharedSpiCard::isBusy()
20006a74 g     O .bss	00000008 AudioOutputPT8211::dma
60001020 g     O .text.headers	0000000c BootData
00001cc4 g     F .text.itcm	00000006 Cuntzertu::getSulProgZ()
200069d4 g     O .bss	00000008 AudioOutputMQS::dma
0000d024 g     F .text.itcm	00000080 Display::drawMenu()
20014d7c g     O .bss	00000004 usb_audio_underrun_count
0001724c g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
0001eaec g     F .text.itcm	00000016 Print::print(long)
00018bf0 g     F .text.itcm	0000001e FatFile::close()
000203bc g     F .text.itcm	00000004 Panic_Temp_isr
0002ba78 g     F .text.itcm	00000030 .hidden __fixdfdi
00021a24 g     F .text.itcm	00000010 usb_midi_write_packed
0000a3d8  w    F .text.itcm	00000090 Encoder::isr54()
00015a84  w    F .text.itcm	00000048 SDFile::~SDFile()
00026080 g     F .text.itcm	000000a4 strtof
00018ca4 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
0002ba54 g     F .text.itcm	00000024 _wcsnrtombs_r
0001c48c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00010548  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
000159f0  w    F .text.itcm	00000054 File::write(unsigned char)
00028f50 g     F .text.itcm	0000002c _write_r
00021528 g     F .text.itcm	000000e8 usb_audio_configure
0001e77c  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#3}::_FUN(void*, void*)
0001ed08 g     F .text.itcm	0000002e String::String(unsigned char)
0001fcd0 g     F .text.itcm	0000001e ltoa
00010798 g     F .text.itcm	00000090 ElFileSystem::ElFileSystem()
0000a350 g     F .text.itcm	0000003c Communicator::msgWarning(String, bool)
20006348 g     O .bss	000004d4 SD
0001cbf0 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
00024cf8 g     F .text.itcm	0000016c .hidden __aeabi_frsub
0001e288 g     F .text.itcm	00000050 AudioStream::release(audio_block_struct*)
00001cb4 g     F .text.itcm	00000006 Cuntzertu::getModal()
20006140 g     O .bss	00000020 sync_transfer
00010e0c g     F .text.itcm	00000190 ElFileSystem::torra(int)
00011790 g     F .text.itcm	00000014 Recorder::isRecording()
0001ebe0 g     F .text.itcm	0000003a String::String(char const*)
0000b350  w    F .text.itcm	00000090 Encoder::isr33()
20014114 g     O .bss	00000014 outl_5
000234fc g     F .text.itcm	0000000c nanf
00021ad8 g     F .text.itcm	000000a8 usb_midi_read_message
20007200 g     O .bss	0000009c bqMancsDinFin
20005838 g     O .data	00000004 _impure_ptr
200075d0 g     O .bss	00000004 enc_puls_count
20003eb0  w    O .data	00000024 vtable for Stream
00012174  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
00016c94 g     F .text.itcm	0000002c ExFatFile::peek()
0002b268 g     F .text.itcm	00000130 __sflush_r
00024868 g     F .text.itcm	0000010c scalbn
20003ca0  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20006a44 g     O .bss	00000008 AudioOutputSPDIF::dma
20004e70 g     O .data	00000140 Wire
0001593c  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
0001e2d8 g     F .text.itcm	00000046 AudioStream::transmit(audio_block_struct*, unsigned char)
0001b508 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00028f08 g     F .text.itcm	00000046 _fwalk_sglue
0001c41c g     F .text.itcm	0000000c SdioCard::errorCode() const
0001e92c g     F .text.itcm	00000070 IntervalTimer::end()
20014dd4 g     O .bss	00000004 usb_midi_handleTuneRequest
00019000 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
00010598  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002160 g       .text.code	00000000 __preinit_array_end
2000699c g     O .bss	00000008 AudioInputTDM::dma
20005848 g     O .data	00000005 crais_md_fiu
20006a1c g     O .bss	00000008 AudioOutputTDM2::dma
0001870c g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
20014f55 g     O .bss	00000001 usb_midi_msg_channel
0002a088 g     F .text.itcm	0000002a __ascii_mbtowc
0000b500  w    F .text.itcm	00000090 Encoder::isr36()
0000a698  w    F .text.itcm	0000008c Encoder::isr18()
00027e64 g     F .text.itcm	00000064 __ulp
0001e1dc g     F .text.itcm	000000ac AudioStream::allocate()
0000b740  w    F .text.itcm	00000090 Encoder::isr40()
00020678 g     F .text.itcm	0000002c usb_stop_sof_interrupts
0001b530 g     F .text.itcm	00000034 FsVolume::open(String const&, int)
00003eac  w    F .text.itcm	0000023c ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<Stream, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseQuotedString()
0000ac9c  w    F .text.itcm	0000008c Encoder::isr29()
0001dbc0  w    F .text.itcm	00000018 TwoWire::peek()
0001330c g     F .text.itcm	00000028 resetController()
0001dbd8  w    F .text.itcm	00000002 TwoWire::flush()
000127c8 g     F .text.itcm	000002c4 setup
20004c08 g     O .data	0000006c usb_descriptor_list
00003918  w    F .text.itcm	000000d6 ArduinoJson::V6215PB2::detail::VariantData* ArduinoJson::V6215PB2::detail::variantGetOrAddMember<ArduinoJson::V6215PB2::detail::StaticStringAdapter>(ArduinoJson::V6215PB2::detail::VariantData*, ArduinoJson::V6215PB2::detail::StaticStringAdapter, ArduinoJson::V6215PB2::detail::MemoryPool*)
000034f4 g     F .text.itcm	00000038 Cuntzertu::setModal(unsigned char)
0001c8fc g     F .text.itcm	00000020 SdioCard::status()
0000a60c  w    F .text.itcm	0000008c Encoder::isr17()
0000dcc8 g     F .text.itcm	0000066a Display::drawKnob(unsigned char, unsigned char, float, float, float, String, bool)
00018c84 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
00023b20 g     F .text.itcm	00000204 sinf
00020eac g     F .text.itcm	00000064 usb_config_rx_iso
0000a3b0  w    F .text.itcm	00000002 Print::flush()
0000bc44  w    F .text.itcm	0000008c Encoder::isr9()
20014dbc g     O .bss	00000004 usb_midi_handleStart
20006a64 g     O .bss	00000004 AudioOutputPT8211::block_left_1st
20014088 g     O .bss	00000020 mySPI
00028620 g     F .text.itcm	00000010 nan
00016480  w    F .text.itcm	00000052 SDClass::rmdir(char const*)
20003db0 g     O .data	0000000c vtable for AudioOutputPT8211
000190a8 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
20014100 g     O .bss	00000014 outl_4b
20014f33 g     O .bss	00000001 AudioOutputPT8211::update_responsibility
200141ec g     O .bss	00000020 pt8211_1
00003530  w    F .text.itcm	00000118 unsigned short ArduinoJson::V6215PB2::detail::VariantData::asIntegral<unsigned short>() const
0001906c g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20006988 g     O .bss	00000004 ExFatVolume::m_cwv
00023878 g     F .text.itcm	00000006 __ieee754_sqrt
20050000 g       .text.csf	00000000 _estack
0001b420 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
20005860 g     O .data	00000005 crais_ms_fio
0001e648 g     F .text.itcm	00000034 DMAChannel::release()
000158e4  w    F .text.itcm	00000058 File::read()
000225c8 g     F .text.itcm	00000050 usb_serial_write_buffer_free
0000a3b4  w    F .text.itcm	00000004 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#1}::_FUN(void*)
0000b088  w    F .text.itcm	00000090 Encoder::isr52()
0001e398 g     F .text.itcm	000000d0 AudioConnection::connect()
20007470 g     O .bss	0000009c bqTumbuStat1
60001784 g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
00001cac g     F .text.itcm	00000006 Cuntzertu::getCuntz()
0000c0a4  w    F .text.itcm	0000008c Encoder::isr5()
2000582c g     O .data	0000000c __sglue
20006994 g     O .bss	00000008 AudioInputPDM::dma
000222b8 g     F .text.itcm	00000100 usb_serial_configure
0001dc08 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00014660 g     F .text.itcm	00000148 AudioEffectFreeverb::AudioEffectFreeverb()
20014f30 g     O .bss	00000001 AudioInputUSB::receive_flag
00015c04  w    F .text.itcm	000000b0 File::~File()
0001eb20  w    F .text.itcm	0000001c _write
0001ee94 g     F .text.itcm	0000001e operator+(StringSumHelper const&, char)
200069bc g     O .bss	00000008 AudioInputPDM2::dma
20005ec0 g       .data	00000000 _edata
20014b40 g     O .bss	00000014 t1_2
0001880c g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20014f3c g     O .bss	00000001 external_psram_size
0001c48c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0001d8b4 g     F .text.itcm	0000004c FsName::get16()
20006f50 g     O .bss	00000020 ampL
0000a8c8  w    F .text.itcm	0000008c Encoder::isr22()
0001b5f0  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0001bdf8 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0001b890 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
000184e8 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
20005290 g     O .data	0000000c AudioInputUSB::features
00018b58 g     F .text.itcm	00000078 FatFile::addDirCluster()
0002b494 g     F .text.itcm	000000aa __fputwc
0000d194 g     F .text.itcm	00000270 Display::clearRect(int, int, int, int)
00021714  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
20005af5 g     O .data	00000001 gWDT_trng_index
0001df38 g     F .text.itcm	0000000c lpi2c1_isr()
0000a3c0  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
0001ab3c g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
00022c00 g     F .text.itcm	00000040 nvic_execution_priority()
20014d94 g     O .bss	00000004 usb_midi_handleClock
0001211c  w    F .text.itcm	00000058 AudioFilterBiquad::AudioFilterBiquad()
20005a14 g     O .data	00000080 isr_table_gpio4
00023efc g     F .text.itcm	00000024 .hidden __math_divzerof
0001fc6c g     F .text.itcm	00000062 ultoa
20005840 g     O .data	00000005 crais_md_fio
00004980  w    F .text.itcm	00000052 ArduinoJson::V6215PB2::DeserializationError ArduinoJson::V6215PB2::detail::deserialize<ArduinoJson::V6215PB2::detail::JsonDeserializer, Stream&, , void>(ArduinoJson::V6215PB2::JsonDocument&, Stream&)
0000fcc4 g     F .text.itcm	0000006c Display::blankPage()
000163b4  w    F .text.itcm	00000002 SDClass::~SDClass()
600017dc g     F .text.code	00000068 TwoWire::begin()
00011e58 g     F .text.itcm	00000060 receiving()
00005530  w    F .text.itcm	000001d8 ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<char const*, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseQuotedString()
0001b2fc g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
20013c4c g     O .bss	00000038 mdMixer
0001f088 g     F .text.itcm	00000014 String::toFloat() const
000039f0 g     F .text.itcm	0000016c Biquad::serialize(ArduinoJson::V6215PB2::JsonObject)
0000b860  w    F .text.itcm	00000090 Encoder::isr42()
000018d4 g     F .text.itcm	0000000a Cuntzertu::getVolMd()
00028e60 g     F .text.itcm	0000003e __swrite
0001fc64 g     F .text.itcm	00000004 operator new(unsigned int)
0001e700 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20005828 g     O .data	00000004 __malloc_trim_threshold
0001eb68  w    F .text.itcm	00000004 usb_serial_class::peek()
0001e488 g     F .text.itcm	00000094 AudioConnection::disconnect()
0000ba10  w    F .text.itcm	00000090 Encoder::isr45()
000272e4 g     F .text.itcm	0000000a fcvtf
00003c70 g     F .text.itcm	0000023c Canna::serialize(ArduinoJson::V6215PB2::JsonObject)
0001c2f8  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000bd5c  w    F .text.itcm	0000008c Encoder::isr11()
00028e14 g     F .text.itcm	00000028 fiprintf
000213c4 g     F .text.itcm	00000104 usb_audio_transmit_callback
00028ff4 g     F .text.itcm	00000f8c _vfiprintf_r
00013d2c  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
00024e64 g     F .text.itcm	00000024 .hidden __floatunsisf
00027d10 g     F .text.itcm	00000154 __mdiff
0001c47c g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00024000 g     F .text.itcm	00000010 .hidden __math_uflow
00018744 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
20014da8 g     O .bss	00000004 usb_midi_handlePitchChange
00015100 g     F .text.itcm	00000098 AudioOutputPT8211::update()
0001a9b0 g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
20006a54 g     O .bss	00000008 AudioOutputI2SHex::dma
20004c88 g     O .data	00000120 _impure_data
00006268 g     F .text.itcm	0000042c Biquad::deserialize(ArduinoJson::V6215PB2::JsonObject)
00016dac g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
000117b8 g     F .text.itcm	00000098 Recorder::poke(bool)
20014f0c g     O .bss	00000002 AudioStream::cpu_cycles_total
20006ba4 g     O .bss	00000034 Cuntzertu::acordadura
0002845c g     F .text.itcm	0000000c __sfp_lock_release
20013c84 g     O .bss	00000190 mdSynth
0001ca1c g     F .text.itcm	000000b8 SdioCard::writeStop()
00002f84 g     F .text.itcm	00000370 Cuntzertu::sync()
000120b0  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
00003b5c g     F .text.itcm	00000114 Crai::serialize(ArduinoJson::V6215PB2::JsonObject)
00010170 g     F .text.itcm	000003c4 Display::Display()
0001eedc g     F .text.itcm	00000028 operator+(StringSumHelper const&, int)
0000a4f4  w    F .text.itcm	0000008c Encoder::isr15()
20014dd0 g     O .bss	00000004 usb_midi_handleTimeCodeQuarterFrame
000169d4 g     F .text.itcm	00000014 ExFatFile::close()
0000221c g     F .text.itcm	00000400 Cuntzertu::timerRoutine()
2000427c g     O .data	00000101 _ctype_
00020390  w    F .text.itcm	00000004 _read
60002160 g       .text.code	00000000 __init_array_start
0002520c  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
0001f09c g     F .text.itcm	000000b0 analogRead
20004da8 g     O .data	00000004 F_BUS_ACTUAL
20014b68 g     O .bss	00000014 t2_1
00000a70 g     F .text.itcm	000000fc Biquad::parse(String)
0000aff8  w    F .text.itcm	00000090 Encoder::isr51()
00017d68 g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
0001e774  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#1}::_FUN(void*)
20014ddc g     O .bss	00000122 usb_midi_msg_sysex
000164d4  w    F .text.itcm	00000064 SDClass::rename(char const*, char const*)
20004870 g     O .data	0000002a pin_to_channel
0000aa6c  w    F .text.itcm	0000008c Encoder::isr25()
0000a2f4 g     F .text.itcm	00000014 Communicator::msgInfo(String)
000018c8 g     F .text.itcm	0000000a Cuntzertu::getVolMs()
00015248 g     F .text.itcm	00000118 AudioOutputPT8211::begin()
200075fc g     O .bss	000062a0 freeverbL
20014244 g     O .bss	00000004 rec
2000583c g     O .data	00000004 charge
0001e16c  w    F .text.itcm	0000000c AudioStream::update_all()
0002a340 g     F .text.itcm	000000d8 __smakebuf_r
0001ec54 g     F .text.itcm	0000003a String::String(char)
0000e334  w    F .text.itcm	000006fe GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::roundRect(int, int, int, int, unsigned char)
00000000 g       .text.itcm	00000000 _stext
0001e594 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
2000529c g     O .data	00000004 IntervalTimer::nvic_priorites
0001efac g     F .text.itcm	00000022 String::indexOf(char, unsigned int) const
0000a3b8  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
0001b5f4  w    F .text.itcm	00000006 SharedSpiCard::end()
20013c10 g     O .bss	00000014 md2_1
00028540 g     F .text.itcm	000000dc strlen
00019010 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
20014f41 g     O .bss	00000001 lt_pr
00001904 g     F .text.itcm	0000000a Cuntzertu::getBilT()
00019538 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0000a3cc  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
000261c8 g     F .text.itcm	00000594 __gethex
6000344c g     O .text.progmem	00000024 usb_string_product_name_default
00000f40 g     F .text.itcm	0000016c Canna::setSonu(unsigned char)
000149b4 g     F .text.itcm	0000007e AudioAmplifier::update()
20006a8c g     O .bss	00000008 AudioOutputI2SQuad::dma
20005858 g     O .data	00000005 crais_md_po
0001c4bc g     F .text.itcm	00000068 SdioCard::sectorCount()
20014f39 g     O .bss	00000001 bt_control
000196cc g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
00028184 g     F .text.itcm	000000cc strchr
200075c4 g     O .bss	00000004 enc_count
00022788 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
20006a00 g     O .bss	00000004 AudioOutputUSB::right_2nd
60001994  w    F .text.code	00000002 startup_middle_hook
0001eaa0 g     F .text.itcm	0000004c Print::print(String const&)
20003f28 g     O .data	00000070 vtable for SdioCard
00024c48 g     F .text.itcm	00000042 .hidden __aeabi_f2d
2001420c g     O .bss	00000038 rMixer
20004198 g     O .data	00000060 .hidden __inv_pio4
0001aac0 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
0000ea34 g     F .text.itcm	000006fc Display::displayPage()
600019a0 g     F .text.code	00000110 configure_cache
0001c2f0  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000a7b0  w    F .text.itcm	0000008c Encoder::isr20()
0001c054  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
0000b8f0  w    F .text.itcm	00000090 Encoder::isr43()
20006a7c g     O .bss	00000008 AudioOutputSPDIF2::dma
0001d32c g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00020f10 g     F .text.itcm	0000006c usb_config_tx_iso
20006a24 g     O .bss	00000008 AudioInputAnalog::dma
20014f0e g     O .bss	00000002 AudioStream::cpu_cycles_total_max
0001d6d8 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
00002624 g     F .text.itcm	00000074 Cuntzertu::calcFrequenza(unsigned char)
00024988 g     F .text.itcm	0000027a .hidden __subdf3
60002160 g       .text.code	00000000 __preinit_array_start
00020fd4 g     F .text.itcm	0000001c usb_receive
20003cd0  w    O .data	0000000c vtable for AudioStream
00018614 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00001550 g     F .text.itcm	00000280 Cuntzertu::Cuntzertu()
00027904 g     F .text.itcm	00000060 __lo0bits
0000d0a4 g     F .text.itcm	000000f0 Display::test()
20003da4 g     O .data	0000000c vtable for AudioFilterBiquad
000186c0 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
000118f4 g     F .text.itcm	000000e4 Recorder::putSample(unsigned char)
000117a4 g     F .text.itcm	00000014 Recorder::isPlaying()
000195e8 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00036000 g       *ABS*	00000000 _flashimagelen
20006ac4 g     O .bss	000000dc Encoder::interruptArgs
000197a4 g     F .text.itcm	000000d8 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
0001b878 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
20005adc g     O .data	00000018 waves
00024974 g     F .text.itcm	0000000a __aeabi_atexit
20014db8 g     O .bss	00000004 usb_midi_handleSongSelect
000018bc g     F .text.itcm	0000000a Cuntzertu::getVol()
000201ac g     F .text.itcm	00000024 rtc_get
00017304 g     F .text.itcm	000000b4 ExFatFile::remove()
00024d04 g     F .text.itcm	00000160 .hidden __addsf3
70000000 g       .bss.extram	00000000 _extram_start
0001e744 g     F .text.itcm	00000004 pendablesrvreq_isr
000166f0  w    F .text.itcm	0000003c SDClass::totalSize()
20006a3c g     O .bss	00000008 AudioInputSPDIF3::dma
0001e51c g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
0000a3ac  w    F .text.itcm	00000004 Print::availableForWrite()
200052b0 g     O .data	0000016c __global_locale
0001cf58 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
200075c8 g     O .bss	00000004 enc_old_pos
000169e8 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
000223b8 g     F .text.itcm	000000e0 usb_serial_read
20006ddc g     O .bss	00000001 __lock___sfp_recursive_mutex
0001eb3c g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00002138 g     F .text.itcm	000000e4 Cuntzertu::mute(bool)
00020e48 g     F .text.itcm	00000064 usb_config_tx
00020394  w    F .text.itcm	00000006 _close
0001ae14 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
00010b94 g     F .text.itcm	00000080 ElFileSystem::deleteFile(String)
20014d8c g     O .bss	00000004 usb_midi_handleActiveSensing
0001317c g     F .text.itcm	000000b8 pollSerial()
00026b2c g     F .text.itcm	00000010 free
000183d0 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00027770 g     F .text.itcm	000000a4 __multadd
0002775c g     F .text.itcm	00000012 _Bfree
000157ac  w    F .text.itcm	0000001a SDFile::size()
0001ef04 g     F .text.itcm	00000026 operator+(StringSumHelper const&, float)
00002004 g     F .text.itcm	0000000a Cuntzertu::getVerbVol()
0001a91c g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
00015a44  w    F .text.itcm	00000040 SDFile::~SDFile()
20005ac4  w    O .data	00000016 usb_string_serial_number
20000408  w    O .data	00000048 ArduinoJson::V6215PB2::detail::FloatTraits<double, 8u>::positiveBinaryPowersOfTen()::factors
0001d4c8 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0001c458 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


