
/tmp/arduino/sketches/19CD10A84C0E8AD1F6068DFC44C29E0F/Teensy_Electroneddas.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
600021e0 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
0002ab10 l    d  .fini	00000000 .fini
0002ab14 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20005ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
60034124 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 imxrt_hw.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 analog.c
20014dd6 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20014140 l     O .bss	00000004 s_hotCount
20014144 l     O .bss	00000004 s_hotTemp
20014148 l     O .bss	00000004 s_hot_ROOM
2001414c l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0001f738 l     F .text.itcm	000000c8 endpoint0_receive
0001f800 l     F .text.itcm	00000088 schedule_transfer
0001f888 l     F .text.itcm	00000036 run_callbacks
0001f8c0 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000749c l     O .bss	00000008 endpoint0_buffer
200074a4 l     O .bss	00000004 endpoint0_notify_mask
20006338 l     O .bss	00000008 endpoint0_setupdata
200074a8 l     O .bss	00000004 endpointN_notify_mask
200140e4 l     O .bss	00000008 reply_buffer
20014de2 l     O .bss	00000001 sof_usage
20014df5 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000e0 l     F .text.itcm	00000000 register_tm_clones
00000104 l     F .text.itcm	00000000 frame_dummy
20013f48 l     O .bss	00000000 object.0
60002160 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Cannas.cpp
00000128 l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
00000130 l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
00000138 l     F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*)#4}::_FUN(void*)
0000013c l     F .text.itcm	000000ba bool ArduinoJson::V6215PB2::detail::storeString<ArduinoJson::V6215PB2::detail::ZeroTerminatedRamString, ArduinoJson::V6215PB2::detail::VariantData::VariantStringSetter>(ArduinoJson::V6215PB2::detail::MemoryPool*, ArduinoJson::V6215PB2::detail::ZeroTerminatedRamString, ArduinoJson::V6215PB2::detail::StringStoragePolicy::Copy, ArduinoJson::V6215PB2::detail::VariantData::VariantStringSetter) [clone .isra.0]
000001f8 l     F .text.itcm	00000084 StringSplit(String, char, String*, int) [clone .isra.0]
000024c8 l     F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<Cuntzertu::beginTimer()::{lambda()#1}>(teensy::inplace_function_detail::wrapper<Cuntzertu::beginTimer()::{lambda()#1}>)::{lambda(void*)#1}::_FUN(void*)
00003f48 l     F .text.itcm	00000898 ArduinoJson::V6215PB2::DeserializationError::Code ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<Stream, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseVariant<ArduinoJson::V6215PB2::detail::AllowAllFilter>(ArduinoJson::V6215PB2::detail::VariantData&, ArduinoJson::V6215PB2::detail::AllowAllFilter, ArduinoJson::V6215PB2::DeserializationOption::NestingLimit) [clone .isra.0]
00005628 l     F .text.itcm	00000760 ArduinoJson::V6215PB2::DeserializationError::Code ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<char const*, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseVariant<ArduinoJson::V6215PB2::detail::AllowAllFilter>(ArduinoJson::V6215PB2::detail::VariantData&, ArduinoJson::V6215PB2::detail::AllowAllFilter, ArduinoJson::V6215PB2::DeserializationOption::NestingLimit) [clone .isra.0]
00005d88 l     F .text.itcm	00000060 ArduinoJson::V6215PB2::DeserializationError ArduinoJson::V6215PB2::detail::deserialize<ArduinoJson::V6215PB2::detail::JsonDeserializer, char const*&, , void>(ArduinoJson::V6215PB2::JsonDocument&, char const*&) [clone .isra.0]
00008290 l     F .text.itcm	00000380 ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >::result_type ArduinoJson::V6215PB2::detail::VariantData::accept<ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> > >(ArduinoJson::V6215PB2::detail::JsonSerializer<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >&) const [clone .isra.0]
00009974 l     F .text.itcm	00000064 _GLOBAL__sub_I_waves
200068b4 l     O .bss	0000000c info_B
200068cc l     O .bss	0000000c info_C
200068e4 l     O .bss	0000000c info_E
60002be0 l     O .text.progmem	00000200 wtumbu
600029e0 l     O .text.progmem	00000200 wtumbu2
600027e0 l     O .text.progmem	00000200 wtumbu3
600025e0 l     O .text.progmem	00000200 cab_md_po_sol
600023e0 l     O .text.progmem	00000200 cab_md_c_mi
600021e0 l     O .text.progmem	00000200 cab_ms_po_sol
20002b60 l     O .data	00000034 pitagorica
2000346c l     O .data	00000034 naturale
200034a0 l     O .data	00000034 temperata
20003ebc l     O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<Cuntzertu::beginTimer()::{lambda()#1}, Cuntzertu::beginTimer()::{lambda()#1}, void>(Cuntzertu::beginTimer()::{lambda()#1}&&)::vt
00000000 l    df *ABS*	00000000 Display.cpp
0000c530 l     F .text.itcm	00000438 Display::cursMenu(unsigned char, unsigned char, bool, bool) [clone .part.0]
0000ef60 l     F .text.itcm	000000b0 _GLOBAL__sub_I_enc_pos
60002de0 l     O .text.progmem	00000320 charMap
60003100 l     O .text.progmem	000000fa menu
600031fc l     O .text.progmem	00000008 allpass_8x4
60003204 l     O .text.progmem	00000008 lopass_8x4
6000320c l     O .text.progmem	00000008 hipass_8x4
60003214 l     O .text.progmem	00000016 sd_bitmap_16x11
6000322c l     O .text.progmem	00000120 el_bitmap_48x48
6000334c l     O .text.progmem	0000000f _oled_init
00000000 l    df *ABS*	00000000 Teensy_Electroneddas.ino.cpp
000112a0 l     F .text.itcm	00000010 lpspi4_slave_isr()
20200000 l     O .bss.dma	00001450 setup::data
00011eac l     F .text.itcm	00000670 parse(String) [clone .part.0]
000126b0 l     F .text.itcm	0000071c _GLOBAL__sub_I_peak
200068c0 l     O .bss	0000000c info_B
200068d8 l     O .bss	0000000c info_C
200068f0 l     O .bss	0000000c info_E
200068fc l     O .bss	00000004 _LPSPI4
20002cc0 l     O .data	000006d8 json
00000000 l    df *ABS*	00000000 async_input_spdif3.cpp
00013020 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN21AsyncAudioInputSPDIF310microsLastE
00000000 l    df *ABS*	00000000 input_adc.cpp
00013bb8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputAnalog3dmaE
00000000 l    df *ABS*	00000000 input_i2s.cpp
00013bd0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
00000000 l    df *ABS*	00000000 input_i2s2.cpp
00013be8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputI2S210block_leftE
00000000 l    df *ABS*	00000000 input_i2s_hex.cpp
00013c00 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SHex9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_oct.cpp
00013c18 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SOct9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
00013c30 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 input_pdm.cpp
00013c48 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 input_pdm_i2s2.cpp
00013c60 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputPDM210block_leftE
00000000 l    df *ABS*	00000000 input_spdif3.cpp
00013c78 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputSPDIF310block_leftE
00000000 l    df *ABS*	00000000 input_tdm.cpp
00013c90 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_tdm2.cpp
00013ca8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputTDM214block_incomingE
00000000 l    df *ABS*	00000000 output_i2s.cpp
00013e30 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s2.cpp
00013e48 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputI2S214block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s_hex.cpp
00013e60 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SHex13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_oct.cpp
00013e78 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SOct13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
00013e90 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_mqs.cpp
00013ea8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputMQS14block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
0001466c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
20006be8 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateLOld
20006bf4 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateLOld
20006c00 l     O .bss	0000000c AudioOutputPT8211::isr()::integrateROld
20006c0c l     O .bss	0000000c AudioOutputPT8211::isr()::integrateROld
20006c18 l     O .bss	00000004 AudioOutputPT8211::isr()::oldL
20006c1c l     O .bss	00000004 AudioOutputPT8211::isr()::oldR
20006c20 l     O .bss	00000008 AudioOutputPT8211::isr()::combLOld
20006c28 l     O .bss	00000008 AudioOutputPT8211::isr()::combLOld
20006c30 l     O .bss	00000008 AudioOutputPT8211::isr()::combROld
20006c38 l     O .bss	00000008 AudioOutputPT8211::isr()::combROld
20201460 l     O .bss.dma	00000800 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_pt8211_2.cpp
00014684 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN19AudioOutputPT8211_214block_left_1stE
00000000 l    df *ABS*	00000000 output_pwm.cpp
0001469c l     F .text.itcm	0000001c __tcf_0
000146b8 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN14AudioOutputPWM21update_responsibilityE
00000000 l    df *ABS*	00000000 output_spdif.cpp
000146e8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif2.cpp
00014700 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF214block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif3.cpp
00014718 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF314block_left_1stE
00000000 l    df *ABS*	00000000 output_tdm.cpp
00014730 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_tdm2.cpp
00014748 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputTDM211block_inputE
00000000 l    df *ABS*	00000000 SD.cpp
00015c24 l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
0001da90 l     F .text.itcm	00000084 pit_isr()
0001db14 l     F .text.itcm	00000020 __tcf_0
0001dca8 l     F .text.itcm	0000002c _GLOBAL__sub_I__ZN13IntervalTimer14nvic_prioritesE
20005ec0 l     O .bss	00000060 funct_table
00000000 l    df *ABS*	00000000 usb_desc.c
20005778 l     O .data	00000012 device_descriptor
6000373c l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
0001ed30 l     F .text.itcm	00000002 dummy_isr
20002088 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 Communicator.cpp
00000000 l    df *ABS*	00000000 ElFileSystem.cpp
00010380 l     F .text.itcm	0000016c ElFileSystem::cuntzFromFile(Cuntzertu*, String, bool, char) [clone .part.0]
00000000 l    df *ABS*	00000000 synth_waveform2.cpp
00000000 l    df *ABS*	00000000 analyze_peak.cpp
00000000 l    df *ABS*	00000000 effect_delay_ext.cpp
00000000 l    df *ABS*	00000000 effect_freeverb.cpp
200034d4 l     O .data	00000104 zeroblock
00000000 l    df *ABS*	00000000 filter_biquad.cpp
00000000 l    df *ABS*	00000000 mixer.cpp
00000000 l    df *ABS*	00000000 play_sd_raw.cpp
00000000 l    df *ABS*	00000000 synth_waveform.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00015300 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00017024 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00017d7c l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00019664 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00019e7c l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
00019f78 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0001b60c l     F .text.itcm	00000030 sdIrs()
0001b63c l     F .text.itcm	00000014 isBusyDat()
0001b650 l     F .text.itcm	0000000c isBusyDMA()
0001b65c l     F .text.itcm	000000cc setSdclk(unsigned long)
0001b830 l     F .text.itcm	00000128 initSDHC()
0001b958 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
0001ba94 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
0001bb2c l     F .text.itcm	00000060 readReg16(unsigned long, void*)
0001bc28 l     F .text.itcm	0000002c isBusyCMD13()
0001bde0 l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
0001bff8 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
20014dc6 l     O .bss	00000001 m_initDone
2000681c l     O .bss	00000004 m_sdClkKhz
20014dc7 l     O .bss	00000001 m_version2
20006888 l     O .bss	00000004 m_errorLine
20014dc8 l     O .bss	00000001 m_highCapacity
20014dc9 l     O .bss	00000001 m_transferActive
2000688c l     O .bss	00000010 m_cid
2000689c l     O .bss	00000010 m_csd
200068ac l     O .bss	00000004 m_ocr
200068b0 l     O .bss	00000004 m_rca
20006900 l     O .bss	00000004 m_busyFcn
20014dca l     O .bss	00000001 m_dmaBusy
20006904 l     O .bss	00000004 m_irqstat
200059f4 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20002b94 l     O .data	0000012c lookupTable
20003398 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 Entropy.cpp
20014dd2 l     O .bss	00000001 EntropyClass::rnorm(float, float)::isSpareReady
20006be0 l     O .bss	00000004 EntropyClass::rnorm(float, float)::u1
20006be4 l     O .bss	00000004 EntropyClass::rnorm(float, float)::spare
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
20006820 l     O .bss	00000040 rx_buffer5
20006860 l     O .bss	00000028 tx_buffer5
20005130 l     O .data	00000060 UART8_Hardware
00000000 l    df *ABS*	00000000 Print.cpp
0001dcdc l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 WString.cpp
20014dd4 l     O .bss	00000001 String::operator[](unsigned int)::dummy_writable_char
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
0001e938 l     F .text.itcm	0000005c flash_wait
20014dd9 l     O .bss	00000001 initialized
20014154 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_audio.cpp
0002030c l     F .text.itcm	00000098 copy_to_buffers(unsigned long const*, short*, short*, unsigned int)
000203a4 l     F .text.itcm	0000005c sync_event(transfer_struct*)
0002066c l     F .text.itcm	00000054 rx_event(transfer_struct*)
000207e0 l     F .text.itcm	00000060 tx_event(transfer_struct*)
200051a0 l     O .data	00000004 usb_audio_transmit_callback::count
20201c80 l     O .bss.dma	000000b4 rx_buffer
20201d40 l     O .bss.dma	000000b4 tx_buffer
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
00020a38 l     F .text.itcm	00000040 sysex_byte
00020a78 l     F .text.itcm	00000060 rx_queue_transfer
00020ad8 l     F .text.itcm	00000064 rx_event
00020b3c l     F .text.itcm	0000013c usb_midi_write_packed.part.0
200140ec l     O .bss	00000004 rx_available
200140f4 l     O .bss	0000000c rx_count
20014dde l     O .bss	00000001 rx_head
20014110 l     O .bss	0000000c rx_index
2001412c l     O .bss	00000007 rx_list
20014db8 l     O .bss	00000002 rx_packet_size
20014de0 l     O .bss	00000001 rx_tail
20005f80 l     O .bss	000000c0 rx_transfer
20014de3 l     O .bss	00000001 transmit_previous_timeout
20014dbc l     O .bss	00000002 tx_available
20014de5 l     O .bss	00000001 tx_head
20014de7 l     O .bss	00000001 tx_noautoflush
20014dc0 l     O .bss	00000002 tx_packet_size
20006180 l     O .bss	00000080 tx_transfer
20201f60 l     O .bss.dma	00000c00 rx_buffer
20202b60 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
00021270 l     F .text.itcm	00000060 rx_queue_transfer
20203360 l     O .bss.dma	00001000 rx_buffer
000212d0 l     F .text.itcm	000000b4 rx_event
00021384 l     F .text.itcm	00000090 usb_serial_flush_callback
20204360 l     O .bss.dma	00002000 txbuffer
00021414 l     F .text.itcm	000001b8 usb_serial_write.part.0
200140f0 l     O .bss	00000004 rx_available
20014100 l     O .bss	00000010 rx_count
20014ddf l     O .bss	00000001 rx_head
2001411c l     O .bss	00000010 rx_index
20014134 l     O .bss	00000009 rx_list
20014dba l     O .bss	00000002 rx_packet_size
20014de1 l     O .bss	00000001 rx_tail
20006040 l     O .bss	00000100 rx_transfer
20014de4 l     O .bss	00000001 transmit_previous_timeout
20014dbe l     O .bss	00000002 tx_available
20014de6 l     O .bss	00000001 tx_head
20014de8 l     O .bss	00000001 tx_noautoflush
20014dc2 l     O .bss	00000002 tx_packet_size
20006200 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20014dd1 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-sf_log.o
00000000 l    df *ABS*	00000000 libm_a-w_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-s_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-e_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-sinf.o
00000000 l    df *ABS*	00000000 libm_a-cosf.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
000231fc l     F .text.itcm	00000018 with_errnof
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
000232d8 l     F .text.itcm	00000018 with_errno
000232f0 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-strtod.o
00000000 l    df *ABS*	00000000 libc_a-gdtoa-gethex.o
0002543c l     F .text.itcm	000000a4 rshift
00000000 l    df *ABS*	00000000 libc_a-gdtoa-hexnan.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-isspace.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-strchr.o
00000000 l    df *ABS*	00000000 libc_a-atol.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00027318 l     F .text.itcm	00000018 stdio_exit_handler
00027330 l     F .text.itcm	00000040 cleanup_stdio
00027370 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_nan.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-strtol.o
00027cb4 l     F .text.itcm	00000144 _strtol_l.constprop.0
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00027f7c l     F .text.itcm	00000076 __sprint_r.part.0
00028f80 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00029430 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 _fixdfdi.o
00000000 l    df *ABS*	00000000 _fixunsdfdi.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-sf_log_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 libm_a-sincosf_data.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 data_bandlimit_step.c
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00000000 l    df *ABS*	00000000 Encoder.cpp
0002aae8 l     F .text.itcm	00000008 ___init_veneer
0002aaf0 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
0002aaf8 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
0002ab00 l     F .text.itcm	00000008 ___Z14set_audioClockilmb_veneer
0002ab08 l     F .text.itcm	00000008 ___ZN11AudioStream17initialize_memoryEP18audio_block_structj_veneer
60002108 l     F .text.code	00000008 ___Znwj_veneer
60002110 l     F .text.code	00000008 __memset_veneer
60002118 l     F .text.code	00000008 __set_arm_clock_veneer
60002120 l     F .text.code	00000008 ___ZZN6teensy23inplace_function_detail6vtableIvJEEC4IPFvvEEENS0_7wrapperIT_EEENUlPvS9_E0_4_FUNES9_S9__veneer
60002128 l     F .text.code	00000008 __delay_veneer
60002130 l     F .text.code	00000008 __main_veneer
60002138 l     F .text.code	00000008 ____libc_init_array_veneer
60002140 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60002148 l     F .text.code	00000008 __pwm_init_veneer
60002150 l     F .text.code	00000008 ___ZN13IntervalTimer11beginCyclesEN6teensy16inplace_functionIFvvELj16ELj8EEEm_veneer
60002158 l     F .text.code	00000008 __sm_set_pool_veneer
000148c4  w    F .text.itcm	0000006e SDFile::getModifyTime(DateTimeFields&)
200069b0 g     O .bss	00000004 AudioInputUSB::incoming_right
0001cde8 g     F .text.itcm	000000b8 toUpcase(unsigned short)
20013a9c g     O .bss	00000014 md1_1
000217f4 g     F .text.itcm	00000018 usb_serial_available
0001e070 g     F .text.itcm	00000036 String::String(float, unsigned char)
200069f8 g     O .bss	00000004 AudioOutputUSB::left_2nd
20014a2c g     O .bss	00000038 tMixer
00027150 g     F .text.itcm	00000062 __any_on
0002a418 g     F .text.itcm	00000024 _isatty_r
20006abc g     O .bss	00000008 AsyncAudioInputSPDIF3::dma
0002666c g     F .text.itcm	000000ba strcpy
0001e044 g     F .text.itcm	0000002c String::String(int, unsigned char)
20014dae g     O .bss	00000002 AudioInputUSB::incoming_count
00019e14 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
0000a284  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00001f44 g     F .text.itcm	00000006 Cuntzertu::getVerbRoom()
60001998 g     F .text.code	00000002 startup_default_late_hook
00023a58 g     F .text.itcm	00000012 fabs
0002a43c g     F .text.itcm	0000002c _lseek_r
2000690c g     O .bss	00000004 AudioStream::memory_pool
0001c154 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
20014db4 g     O .bss	00000002 AudioOutputPT8211::block_right_offset
000219c4  w    F .text.itcm	000000d8 yield
00003184 g     F .text.itcm	00000006 Cuntzertu::setPreferredCuntz(unsigned char)
0001a908  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
000228e8 g     F .text.itcm	00000048 sqrt
20014da0 g     O .bss	00000004 usb_timer1_callback
20013d30 g     O .bss	00000014 ms2_2
00018bfc g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
20014040 g     O .bss	00000014 outriv_3
20006280 g     O .bss	000000b4 usb_audio_transmit_buffer
60003470 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
0001d68c g     F .text.itcm	00000018 AudioConnection::AudioConnection()
0000a920  w    F .text.itcm	0000008c Encoder::isr21()
20000cc0 g     O .data	00000120 .hidden __logf_data
60001ab0 g     F .text.code	00000384 configure_external_ram
2000d764 g     O .bss	000062a0 freeverbR
0001a888  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00018b88 g     F .text.itcm	00000074 FatFile::truncate()
20014c48 g     O .bss	00000004 usb_midi_handleProgramChange
20004eb0 g     O .data	00000140 Wire1
00019628  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00023fb4 g     F .text.itcm	0000005a .hidden __floatdidf
20003860  w    O .data	00000010 teensy::inplace_function_detail::empty_vtable<void>
00018f90 g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
0000acf4  w    F .text.itcm	0000008c Encoder::isr28()
0001a384 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
0000a1e0 g     F .text.itcm	00000024 Communicator::msgError(String)
20014dcb g     O .bss	00000001 AudioStream::update_scheduled
20013ccc g     O .bss	00000014 ms1_0
200141d4 g     O .bss	00000004 ser_b_index
20006908 g     O .bss	00000004 FsDateTime::callback
20006dd4 g     O .bss	00000001 __lock___atexit_recursive_mutex
00029158 g     F .text.itcm	0000004c _wcrtomb_r
20013d08 g     O .bss	00000014 ms2_0
20013ab0 g     O .bss	00000014 md1_2
0001057c g     F .text.itcm	00000006 ElFileSystem::isMounted()
600016c8 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
20014dec g     O .bss	00000001 usb_audio_transmit_setting
000190f8 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
0001b1e0 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
000197b4 g     F .text.itcm	00000056 FatFormatter::initPbs()
0001de10 g     F .text.itcm	0000001c Print::println()
0001d198 g     F .text.itcm	000000aa TwoWire::isr()
0001b5d4 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
20003c08 g     O .data	00000070 vtable for DedicatedSpiCard
20014da4 g     O .bss	00000002 AudioStream::memory_used
00027ea0 g     F .text.itcm	00000020 __sseek
00027444 g     F .text.itcm	0000003c __sinit
00015fcc g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
000290b4 g     F .text.itcm	000000a4 fcvtbuf
0002a89c g     F .text.itcm	000000b0 __swbuf_r
00014a48  w    F .text.itcm	00000028 File::flush()
00014934  w    F .text.itcm	0000006e SDFile::getCreateTime(DateTimeFields&)
0001e190 g     F .text.itcm	0000001c String::append(char const*)
0000af24  w    F .text.itcm	00000090 Encoder::isr32()
20005770 g     O .data	00000005 crais_ms_po
20014c14 g     O .bss	00000004 usb_audio_overrun_count
00026734 g     F .text.itcm	0000000c __malloc_unlock
20014c2c g     O .bss	00000004 usb_midi_handleAfterTouch
20004d10 g     O .data	00000060 Serial5
00001ac0 g     F .text.itcm	00000128 Cuntzertu::setVolBilMd(float, float)
00014ad4  w    F .text.itcm	000000b0 SDFile::openNextFile(unsigned char)
20006ba0 g     O .bss	00000004 FsVolume::m_cwv
00018208 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
0000ae98  w    F .text.itcm	0000008c Encoder::isr31()
20014dd0 g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
0001a87c  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
0000a4c0  w    F .text.itcm	0000008c Encoder::isr13()
6000193c g     F .text.code	00000054 analog_init
00017f70 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
20000450 g     O .data	00000870 .hidden __exp_data
20014dd7 g     O .bss	00000001 cuntz_num
0001aeb8 g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
0001e33c g     F .text.itcm	00000058 String::trim()
0001e994 g     F .text.itcm	00000048 eeprom_initialize
0000a280  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#4}::_FUN(void*)
0001da84  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#2}::_FUN(void*, void*)
00023338 g     F .text.itcm	00000030 .hidden __math_divzero
20004cac g     O .data	00000004 F_CPU_ACTUAL
20014c60 g     O .bss	00000004 usb_midi_handleSysExComplete
20003d50  w    O .data	0000005c vtable for SDFile
0001e2e8 g     F .text.itcm	00000054 String::substring(unsigned int, unsigned int) const
200069a8 g     O .bss	00000004 AudioInputUSB::ready_right
00026414 g     F .text.itcm	000000f8 memmove
200047b8 g     O .data	00000204 step_table
0000abdc  w    F .text.itcm	0000008c Encoder::isr26()
20014dda g     O .bss	00000001 last_error
00001ff8 g     F .text.itcm	0000002c Cuntzertu::setGateMode(unsigned char)
0000d930 g     F .text.itcm	000001f0 Display::drawBattery(unsigned char, unsigned char)
20005994 g     O .data	00000008 monitorTimer
0001c70c g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
00026740 g     F .text.itcm	0000004c _Balloc
0002ab1c g       .ARM.exidx	00000000 __exidx_end
00011664  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
0000a1c8 g     F .text.itcm	00000004 Communicator::setWarningEnabled(bool)
20014df4 g     O .bss	00000001 usb_midi_msg_type
200074c0 g     O .bss	00000004 feedback_accumulator
000010e8 g     F .text.itcm	00000036 Canna::setBiquads(AudioFilterBiquad*, AudioFilterBiquad*)
0001a164 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
2000702c g     O .bss	0000009c bqMancdStat
00004838 g     F .text.itcm	00000c18 Cuntzertu::readJSONPrefs(Stream*)
20014dce g     O .bss	00000001 EventResponder::runningFromYield
000206c0 g     F .text.itcm	0000001c AudioOutputUSB::begin()
0001ca78 g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
20005814 g     O .data	00000080 isr_table_gpio2
0001a730 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00005de8 g     F .text.itcm	00000334 Cuntzertu::deserializeFunction(char const*, int)
0001f6d8 g     F .text.itcm	00000060 tempmonGetTemp
0001e270 g     F .text.itcm	0000001c String::operator[](unsigned int)
0001dd5c g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
200051a4 g     O .data	00000004 __atexit_recursive_mutex
00027280 g     F .text.itcm	00000008 atol
00025e28 g     F .text.itcm	0000000c __errno
00014b9c  w    F .text.itcm	00000026 SDFile::isDirectory()
00022038 g     F .text.itcm	0000014a HardwareSerialIMXRT::IRQHandler()
00016b48 g     F .text.itcm	00000176 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
000149a4  w    F .text.itcm	00000044 File::write(unsigned char const*, unsigned int)
20006160 g     O .bss	00000020 tx_transfer
60001000 g     O .text.headers	00000020 ImageVectorTable
0001e070 g     F .text.itcm	00000036 String::String(float, unsigned char)
00014e68  w    F .text.itcm	000000a8 File::~File()
20006a0c g     O .bss	00000004 EventResponder::firstInterrupt
00020308 g     F .text.itcm	00000004 usb_transfer_status
00001c5c g     F .text.itcm	00000068 Cuntzertu::setFilterMode(unsigned char)
000221d0 g     F .text.itcm	00000084 sm_set_pool
20006a9c g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
000170b4 g     F .text.itcm	0000004c ExFatFormatter::writeUpcaseUnicode(unsigned short)
0000b1f4  w    F .text.itcm	00000090 Encoder::isr37()
00020400 g     F .text.itcm	0000011c AudioOutputUSB::update()
20006f4c g     O .bss	00000004 __stdio_exit_handler
0001a4a8 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00017d64 g     F .text.itcm	00000018 ExFatPartition::rootLength()
20003bfc g     O .data	0000000c vtable for AudioAnalyzePeak
0002aa78 g     F .text.itcm	00000030 .hidden __aeabi_d2lz
20006a84 g     O .bss	00000008 AudioOutputSPDIF3::dma
0001df28 g     F .text.itcm	00000038 String::String(String const&)
00014c5c  w    F .text.itcm	00000054 SDFile::setCreateTime(DateTimeFields const&)
00022820 g     F .text.itcm	000000c8 logf
00020a30  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
20013aec g     O .bss	00000014 md2_2
0002a3ec g     F .text.itcm	0000002c _fstat_r
20004338 g     O .data	00000370 digital_pin_to_info_PGM
20014ddc g     O .bss	00000001 lt_pp
00011734 g     F .text.itcm	0000003c byteToCrai(unsigned char, unsigned char*)
200074ac g     O .bss	00000004 errno
0001ca90 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00023a70 g     F .text.itcm	00000110 floor
600033ac  w    O .text.progmem	00000050 TwoWire::i2c3_hardware
00017ad4 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
0002ab18 g       .text.itcm	00000000 _etext
00015360 g     F .text.itcm	000000dc _spi_dma_rxISR0()
00019444 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20005ec0 g       .bss	00000000 _sbss
0000f300 g     F .text.itcm	0000003e Display::initMenu()
0001980c g     F .text.itcm	0000005c FatFormatter::writeMbr()
0001c9d8 g     F .text.itcm	00000006 sdCsInit(unsigned char)
00001c54 g     F .text.itcm	00000006 Cuntzertu::getFilterMode()
00001f70 g     F .text.itcm	00000006 Cuntzertu::setReverbs(AudioEffectFreeverb*, AudioEffectFreeverb*)
00015b14 g     F .text.itcm	00000110 SDClass::mediaPresent()
0001b734 g     F .text.itcm	0000000c SdioCard::errorData() const
20006bd8 g     O .bss	00000004 Cuntzertu::freq
00003680  w    F .text.itcm	00000128 int ArduinoJson::V6215PB2::detail::VariantData::asIntegral<int>() const
0000279c g     F .text.itcm	00000530 Canna::parse(String)
20003e94  w    O .data	00000018 vtable for GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>
0002401c g     F .text.itcm	00000160 .hidden __aeabi_fadd
20014c74 g     O .bss	00000004 usb_midi_handleVelocityChange
0001c8e4 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
200149c8 g     O .bss	00000014 t1_1
00017c84 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00024018 g     F .text.itcm	00000164 .hidden __subsf3
000171b0 g     F .text.itcm	0000052c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
0001e8a4 g     F .text.itcm	00000024 digitalRead
60003748 g       *ABS*	00000000 _stextload
0001d62c g     F .text.itcm	00000018 AudioStream::receiveReadOnly(unsigned int)
000125ec g     F .text.itcm	0000009c loop
0000fc88  w    F .text.itcm	0000023c GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::init()
0001f354 g     F .text.itcm	0000007a flexpwm_init
000111e0 g     F .text.itcm	000000c0 ElFileSystem::readPrefs(Cuntzertu*)
0001ea58 g     F .text.itcm	000000ec eepromemu_flash_write
0002098c g     F .text.itcm	0000003c usb_audio_set_feature
00020d4c g     F .text.itcm	000000a4 usb_midi_flush_output
6000199c g     F .text.code	00000004 startup_debug_reset
000200fc g     F .text.itcm	00000064 usb_config_rx
00011770 g     F .text.itcm	000001d4 sona(unsigned char)
20013d7c g     O .bss	00000190 msSynth
00003194 g     F .text.itcm	000001e0 Cuntzertu::calcCrais(unsigned char, unsigned char)
00022254 g     F .text.itcm	00000044 sqrtf
00015d64 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
0001c53c g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
00020e98 g     F .text.itcm	000003d8 usb_midi_read
0000c968  w    F .text.itcm	00000574 Encoder::attach_interrupt(unsigned char, Encoder_internal_state_t*)
0000a31c  w    F .text.itcm	0000008c Encoder::isr10()
0001d268 g     F .text.itcm	0000008c EntropyClass::Initialize()
20014c68 g     O .bss	00000004 usb_midi_handleSystemReset
00010df4 g     F .text.itcm	00000208 ElFileSystem::cuntzToFile(Cuntzertu*, int)
0001d098 g     F .text.itcm	00000100 TwoWire::endTransmission(unsigned char)
00022ba0 g     F .text.itcm	00000294 __ieee754_rem_pio2
00013ec0 g     F .text.itcm	0000054c AudioOutputPT8211::isr()
20006a08 g     O .bss	00000004 EventResponder::lastInterrupt
20014dc4 g     O .bss	00000002 usb_midi_msg_sysex_len
0001a5e0 g     F .text.itcm	00000028 FsBaseFile::close()
00015678 g     F .text.itcm	00000048 SPIClass::end()
0001ee48 g     F .text.itcm	00000134 memcpy
00025aac g     F .text.itcm	000001b0 __hexnan
00006958 g     F .text.itcm	00000898 Canna::deserialize(ArduinoJson::V6215PB2::JsonObject)
20003bc0 g     O .data	0000000c vtable for AudioMixer4
000149e8  w    F .text.itcm	00000060 File::available()
20007164 g     O .bss	0000009c bqMancsStat
0001a97c g     F .text.itcm	0000008c SharedSpiCard::writeStop()
0001ccac g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
20014c4c g     O .bss	00000004 usb_midi_handleRealTimeSystem
20005ec0 g     O .data	00000000 .hidden __TMC_END__
00023368 g     F .text.itcm	0000001e .hidden __math_invalid
00017b58 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
0001855c g     F .text.itcm	00000028 FatFile::peek()
00023f3c g     F .text.itcm	00000022 .hidden __floatsidf
0000931c g     F .text.itcm	00000658 Cuntzertu::writeJSONPrefs(Stream*)
00007f38 g     F .text.itcm	00000046 Cuntzertu::deserialize(char const*)
20014dd3  w    O .bss	00000001 SDFile::name()::zeroterm
200149ac g     O .bss	00000004 systick_millis_count
0001696c g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
0001df60 g     F .text.itcm	0000003a String::String(char)
000147ec  w    F .text.itcm	0000003c SDFile::truncate(unsigned long long)
0001d058 g     F .text.itcm	00000040 TwoWire::wait_idle()
00021f58 g     F .text.itcm	000000dc HardwareSerialIMXRT::write9bit(unsigned long)
200069f4 g     O .bss	00000004 AudioOutputUSB::left_1st
0002422c g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
00021c7c g     F .text.itcm	0000029c HardwareSerialIMXRT::begin(unsigned long, unsigned short)
20014dee g     O .bss	00000001 usb_configuration
0001a870  w    F .text.itcm	00000006 SdCardInterface::status()
20013f60 g     O .bss	00000004 old_sul
00022184 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0001c7a4 g     F .text.itcm	00000030 SdioCard::syncDevice()
0001b9e0 g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00013148 g     F .text.itcm	00000824 AudioEffectFreeverb::update()
0000a204 g     F .text.itcm	00000024 Communicator::msgOk(String)
00010334  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
00018584 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00027090 g     F .text.itcm	00000062 __ratio
0001afa4 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
20006914 g     O .bss	00000070 AudioStream::memory_pool_available_mask
00001c10 g     F .text.itcm	00000006 Cuntzertu::getSulProgS()
60003470  w    O .text.progmem	00000018 usb_string_manufacturer_name
00011ae4 g     F .text.itcm	000000d4 initCuntz()
20014db2 g     O .bss	00000002 AudioOutputPT8211::block_left_offset
00025e34 g     F .text.itcm	00000010 malloc
00015010 g     F .text.itcm	00000088 BandLimitedWaveform::insert_step(int, bool, int)
20013f0c g     O .bss	0000001c myEnc
600033fc  w    O .text.progmem	00000050 TwoWire::i2c1_hardware
00015a38 g     F .text.itcm	000000dc SDClass::format(int, char, Print&)
20003d2c  w    O .data	00000024 vtable for FsFile
0001f6b4  w    F .text.itcm	0000000a _fstat
20013f64 g     O .bss	00000014 outl_1
0001ceac  w    F .text.itcm	0000001e TwoWire::read()
00013ab4 g     F .text.itcm	000000ba AudioFilterBiquad::update()
0002650c g     F .text.itcm	00000040 __assert_func
00024184 g     F .text.itcm	0000001c .hidden __aeabi_i2f
000152e8  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
20014db0 g     O .bss	00000002 AudioOutputUSB::offset_1st
20000e08 g     O .data	000000c8 __mprec_tens
60001fc0 g     F .text.code	000000e8 usb_init
000064e8 g     F .text.itcm	00000470 Crai::deserialize(ArduinoJson::V6215PB2::JsonObject)
0001a52c g     F .text.itcm	000000b2 FsBaseFile::operator=(FsBaseFile const&)
20014dac g     O .bss	00000002 AudioStream::memory_pool_first_mask
0001e044 g     F .text.itcm	0000002c String::String(int, unsigned char)
20201c60 g     O .bss.dma	00000004 usb_audio_sync_feedback
2001402c g     O .bss	00000014 outriv_2
000229b0 g     F .text.itcm	00000130 __kernel_cos
00011a28 g     F .text.itcm	000000bc playNoda()
0001a878  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
0000bca0  w    F .text.itcm	0000008c Encoder::isr1()
0000f1a8 g     F .text.itcm	000000cc Display::showLogo(String)
0000be44  w    F .text.itcm	0000008c Encoder::isr4()
20013ac4 g     O .bss	00000014 md2_0
00014dd8  w    F .text.itcm	0000008e SDFile::seek(unsigned long long, int)
20006e10 g     O .bss	00000004 __malloc_top_pad
200149b0 g     O .bss	00000004 systick_safe_read
00015204 g     F .text.itcm	0000004c BandLimitedWaveform::generate_pulse(unsigned long, unsigned long, int)
200059a4 g     O .data	00000012 sulProgSData
00007ef0 g     F .text.itcm	00000046 Cuntzertu::deserialize(Stream*)
0001cf50 g     F .text.itcm	00000108 TwoWire::force_clock()
00001f78 g     F .text.itcm	00000080 Cuntzertu::beginTimer()
20003eac  w    O .data	00000010 teensy::inplace_function<void (), 16u, 8u>::inplace_function<void (&)(), void (*)(), void>(void (&)())::vt
00002d20 g     F .text.itcm	00000070 Cuntzertu::setPuntu(unsigned char)
aaaaafff g       *ABS*	00000000 _flexram_bank_config
00002d90 g     F .text.itcm	000000b0 Cuntzertu::setFini(float)
00016cc0 g     F .text.itcm	000000e4 ExFatFile::truncate()
200051ac g     O .data	00000000 .hidden __dso_handle
0001eb44 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
00025dfc g     F .text.itcm	0000002c itoa
00023f1c g     F .text.itcm	0000001e .hidden __aeabi_ui2d
000115c4  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
000291a4 g     F .text.itcm	00000008 _localeconv_r
0001ca20 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
00011518  w    F .text.itcm	00000088 SPISlave_T4<&SPI1, (SPI_BITS)8>::SLAVE_ISR()
0002a5a8 g     F .text.itcm	000002f4 __sfvwrite_r
00026994 g     F .text.itcm	0000005c __i2b
0001e1f8 g     F .text.itcm	00000028 operator+(StringSumHelper const&, unsigned char)
20000000 g       .data	00000000 _sdata
20014c40 g     O .bss	00000004 usb_midi_handleNoteOn
00019984 g     F .text.itcm	000001c4 FatFormatter::makeFat32()
000099d8 g     F .text.itcm	000007e8 Cuntzertu::parse(String)
600035e4 g     O .text.progmem	00000155 usb_config_descriptor_480
00001550 g     F .text.itcm	00000016 Canna::setMIDI(unsigned char, unsigned char, unsigned char, unsigned char)
0002425c g     F .text.itcm	000002c8 .hidden __udivmoddi4
00023c98 g     F .text.itcm	00000000 .hidden __aeabi_drsub
000116c4  w    F .text.itcm	00000064 AudioSynthWaveform2::AudioSynthWaveform2()
0001ca70 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
00017e30 g     F .text.itcm	00000034 FatFile::addCluster()
00027ee4 g     F .text.itcm	00000024 _sbrk_r
000005f8 g     F .text.itcm	000004f4 Biquad::sync(unsigned short)
0000a1c0 g     F .text.itcm	00000008 Communicator::Communicator(Stream*)
20013a88 g     O .bss	00000014 md1_0
0001b7ac g     F .text.itcm	0000001c SdioCard::type() const
000034d8  w    F .text.itcm	00000088 float ArduinoJson::V6215PB2::detail::VariantData::asFloat<float>() const
00001f4c g     F .text.itcm	00000014 Cuntzertu::setBiquads(AudioFilterBiquad*, AudioFilterBiquad*)
60001990 g     F .text.code	00000002 startup_default_early_hook
200003c0  w    O .data	00000048 ArduinoJson::V6215PB2::detail::FloatTraits<double, 8u>::negativeBinaryPowersOfTen()::factors
6000164c g     F .text.code	00000028 ResetHandler
00023238 g     F .text.itcm	0000001e .hidden __math_invalidf
0002187c g     F .text.itcm	00000020 usb_serial_getchar
0001479c  w    F .text.itcm	00000050 SDFile::name()
20014c1c g     O .bss	00000008 usb_cdc_line_coding
00010ffc g     F .text.itcm	00000094 ElFileSystem::cuntzFromFileJson(Cuntzertu*, int, bool)
0001e850 g     F .text.itcm	00000054 digitalWrite
20006a10 g     O .bss	00000004 EventResponder::lastYield
00015d3c g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
0002a468 g     F .text.itcm	0000002c _read_r
0000ae0c  w    F .text.itcm	0000008c Encoder::isr30()
20007478 g     O .bss	0000000c command
00003560  w    F .text.itcm	00000120 unsigned char ArduinoJson::V6215PB2::detail::VariantData::asIntegral<unsigned char>() const
000017bc g     F .text.itcm	0000007c Cuntzertu::setVol(float)
00010968 g     F .text.itcm	000001f8 ElFileSystem::copy(int, int)
00020c78 g     F .text.itcm	000000c4 usb_midi_configure
20006a68 g     O .bss	00000004 AudioOutputPT8211::block_left_2nd
000102b4  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
0001a8fc  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00017044 g     F .text.itcm	0000002e ExFatFormatter::syncUpcase()
00025dec g     F .text.itcm	00000010 isspace
0000b044  w    F .text.itcm	00000090 Encoder::isr34()
00014828  w    F .text.itcm	00000054 SDFile::setModifyTime(DateTimeFields const&)
0000318c g     F .text.itcm	00000006 Cuntzertu::getPreferredCuntz()
000291ac g     F .text.itcm	000000c6 _fclose_r
20013ce0 g     O .bss	00000014 ms1_1
200074b0 g     O .bss	00000010 extmem_smalloc_pool
0000d2bc  w    F .text.itcm	00000672 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::rect(int, int, int, int, unsigned char)
20006e08 g     O .bss	00000004 __malloc_max_sbrked_mem
0001b0a8 g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
20014dcd g     O .bss	00000001 AudioOutputUSB::update_responsibility
00014a9c  w    F .text.itcm	0000001a SDFile::position()
0001e8c8 g     F .text.itcm	00000070 pinMode
00002548 g     F .text.itcm	0000024c Canna::playCrai(unsigned char, unsigned char)
0001e28c g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00001f68 g     F .text.itcm	00000006 Cuntzertu::setCannaMixers(AudioMixer4*, AudioMixer4*)
20005768 g     O .data	00000005 crais_ms_med
00021ac0 g     F .text.itcm	00000026 HardwareSerialIMXRT::available()
00022ae0 g     F .text.itcm	000000b0 __kernel_sin
00023f60 g     F .text.itcm	00000042 .hidden __extendsfdf2
00001998 g     F .text.itcm	00000128 Cuntzertu::setVolBilMs(float, float)
0001d774 g     F .text.itcm	00000020 AudioConnection::connect(AudioStream&, unsigned char, AudioStream&, unsigned char)
00023ca4 g     F .text.itcm	00000276 .hidden __adddf3
600016fc g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
200069a4 g     O .bss	00000004 AudioInputUSB::ready_left
200069c4 g     O .bss	00000008 AudioInputTDM2::dma
20004ff0 g     O .data	00000140 Wire2
20014c64 g     O .bss	00000004 usb_midi_handleSysExPartial
60034400 g     O .text.csf	00000c00 hab_csf
00014a70  w    F .text.itcm	0000002c File::peek()
20007474 g     O .bss	00000004 com
0001a1bc g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
000156c4  w    F .text.itcm	000000c8 SDClass::open(char const*, unsigned char)
00026ef8 g     F .text.itcm	000000c2 __b2d
0002ab14 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
00013014  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
000104ec g     F .text.itcm	00000090 ElFileSystem::ElFileSystem()
20014df2 g     O .bss	00000001 usb_midi_msg_data1
0001f6c0  w    F .text.itcm	00000004 _isatty
0001251c g     F .text.itcm	00000018 parse(String)
20006a04 g     O .bss	00000004 EventResponder::firstYield
0000b0d4  w    F .text.itcm	00000090 Encoder::isr35()
0001d34c g     F .text.itcm	0000012c EntropyClass::rnorm(float, float)
00021a9c  w    F .text.itcm	00000004 HardwareSerialIMXRT::operator bool()
00010748 g     F .text.itcm	000001a0 ElFileSystem::listaFiles(bool)
0001cd50 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00010300  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00000280  w    F .text.itcm	00000374 ArduinoJson::V6215PB2::detail::parseNumber(char const*, ArduinoJson::V6215PB2::detail::VariantData&)
20007488 g     O .bss	00000004 efs
00027630 g     F .text.itcm	000003d8 _realloc_r
00014bc4  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
00026608 g     F .text.itcm	00000048 __libc_init_array
0001f008 g     F .text.itcm	0000034c dtostrf
0001487c  w    F .text.itcm	00000046 SDFile::rewindDirectory()
0001cea0  w    F .text.itcm	0000000c TwoWire::available()
20003cd0 g     O .data	00000030 vtable for HardwareSerialIMXRT
00016548 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
0001b740 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
20003f94 g     O .data	00000100 __hexdig
0001513c g     F .text.itcm	000000c8 BandLimitedWaveform::new_step_check_pulse(unsigned long, unsigned long, int)
000168bc g     F .text.itcm	000000ae ExFatFile::addDirCluster()
20005794 g     O .data	00000080 isr_table_gpio1
00020928 g     F .text.itcm	00000064 usb_audio_get_feature
0002a540 g     F .text.itcm	00000066 _fputwc_r
20000de0 g     O .data	00000028 __mprec_bigtens
0000aac4  w    F .text.itcm	0000008c Encoder::isr24()
00026844 g     F .text.itcm	000000b0 __s2b
0001b3d8  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
0001f6d0  w    F .text.itcm	00000004 abort
00020a20  w    F .text.itcm	00000004 usb_serial_class::clear()
00023f1c g     F .text.itcm	0000001e .hidden __floatunsidf
0001f674  w    F .text.itcm	00000034 _sbrk
6002e264 g       *ABS*	00000000 _sdataload
00026cfc g     F .text.itcm	00000042 __mcmp
00014fc0 g     F .text.itcm	00000050 BandLimitedWaveform::lookup(int)
0001ed34 g     F .text.itcm	00000104 attachInterrupt
20003dd0 g     O .data	00000030 vtable for SDClass
200069ec g     O .bss	00000008 AudioOutputTDM::dma
200051a8 g     O .data	00000004 __brkval
20014ded g     O .bss	00000001 usb_cdc_line_rtsdtr
0001e188 g     F .text.itcm	00000008 String::append(String const&)
20013a04 g     O .bss	00000040 gWDT_trng_prior
000144a4 g     F .text.itcm	000000b0 AudioOutputPT8211::config_i2s()
20013fc8 g     O .bss	00000014 outr_1
600020fc g     F .text.code	00000000 _init
000215cc g     F .text.itcm	00000002 usb_serial_reset
00017edc g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0001df9c g     F .text.itcm	0000000e String::~String()
00027df8 g     F .text.itcm	0000001c strtol
0001ebfc g     F .text.itcm	00000134 eeprom_write_byte
20001f18 g     O .data	000000e0 .hidden __sincosf_table
20014dea g     O .bss	00000001 usb_audio_sync_nbytes
60001844 g     F .text.code	000000f8 AudioStream::initialize_memory(audio_block_struct*, unsigned int)
00015844  w    F .text.itcm	00000054 SDClass::remove(char const*)
00014774  w    F .text.itcm	00000028 SDFile::close()
00023040 g     F .text.itcm	000001bc cosf
0000c100  w    F .text.itcm	00000430 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::write(unsigned char)
0001df28 g     F .text.itcm	00000038 String::String(String const&)
0000b700  w    F .text.itcm	00000090 Encoder::isr53()
00014d50  w    F .text.itcm	00000040 SDFile::~SDFile()
200141d8 g     O .bss	000007d0 ser_buffer
0002aaa8 g     F .text.itcm	00000040 .hidden __aeabi_d2ulz
0001e1ac g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
00024018 g     F .text.itcm	00000164 .hidden __aeabi_fsub
6000348c g     O .text.progmem	00000155 usb_config_descriptor_12
00000020 g     F .text.itcm	000000c0 irq_gpio6789
000233c8 g     F .text.itcm	00000690 __kernel_rem_pio2
20003e00 g     O .data	00000024 vtable for TwoWire
00024528 g     F .text.itcm	00000e70 _strtod_l
00025a74 g     F .text.itcm	00000036 __match
00001c18 g     F .text.itcm	00000014 Cuntzertu::setSulProgZ(unsigned char)
0001c9f8 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
0000aa38  w    F .text.itcm	0000008c Encoder::isr23()
20014e20 g       .bss	00000000 _ebss
0001c1dc g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00013b70 g     F .text.itcm	00000046 AudioFilterBiquad::setCoefficients(unsigned long, int const*)
20013cf4 g     O .bss	00000014 ms1_2
00001860 g     F .text.itcm	00000006 Cuntzertu::getBilMd()
00007f80  w    F .text.itcm	00000310 void ArduinoJson::V6215PB2::detail::TextFormatter<ArduinoJson::V6215PB2::detail::Writer<Stream, void> >::writeFloat<double>(double)
60001750 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
00010288  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
0000fc4c g     F .text.itcm	00000008 Display::update()
0001e108 g     F .text.itcm	0000007e String::append(char const*, unsigned int)
00002024 g     F .text.itcm	00000006 Cuntzertu::getGateMode()
000268f4 g     F .text.itcm	00000040 __hi0bits
00015ca4 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
0000202c g     F .text.itcm	00000024 Cuntzertu::setSul(float)
0001d250 g     F .text.itcm	0000000c lpi2c3_isr()
00025cf8 g     F .text.itcm	00000004 utoa
0001160c  w    F .text.itcm	00000058 AudioFilterBiquad::AudioFilterBiquad()
00016a10 g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
00000e98 g     F .text.itcm	000000d4 Canna::Canna(unsigned char)
20206360 g       .bss.dma	00000000 _heap_start
20004b84 g     O .data	00000001 String::zerotermination
0000ac68  w    F .text.itcm	0000008c Encoder::isr27()
20006dd8 g     O .bss	00000001 __lock___malloc_recursive_mutex
000241b0 g     F .text.itcm	0000007c .hidden __floatdisf
20014bf4 g     O .bss	00000020 usb1
0000a434  w    F .text.itcm	0000008c Encoder::isr12()
000156c0  w    F .text.itcm	00000002 SDClass::~SDClass()
200149f0 g     O .bss	00000014 t2_0
6000335c  w    O .text.progmem	00000050 TwoWire::i2c4_hardware
0001dfac g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
00013014  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20006e14 g     O .bss	00000138 __sf
00012dcc g     F .text.itcm	00000204 AudioSynthWaveform2::update()
200069fc g     O .bss	00000004 AudioOutputUSB::right_1st
00001870 g     F .text.itcm	00000128 Cuntzertu::setVolBilT(float, float)
0001abdc g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
000071f0 g     F .text.itcm	00000d00 Cuntzertu::deserialize(ArduinoJson::V6215PB2::JsonObject)
00010584 g     F .text.itcm	000001c4 ElFileSystem::execute(int)
00014e68  w    F .text.itcm	000000a8 File::~File()
00000006 g       *ABS*	00000000 _itcm_block_count
20005f40 g     O .bss	00000020 endpoint0_transfer_data
00019bfc g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0001cb70 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
20013a44 g     O .bss	00000004 inact_timer
0001ef80 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
0001f3d0 g     F .text.itcm	000000f4 pwm_init
60001674 g     F .text.code	00000054 set_audioClock(int, long, unsigned long, bool)
00023ca4 g     F .text.itcm	00000276 .hidden __aeabi_dadd
0002051c g     F .text.itcm	00000150 usb_audio_receive_callback
20007494 g     O .bss	00000004 enc_pos
00001f60 g     F .text.itcm	00000006 Cuntzertu::setOutAmps(AudioAmplifier*, AudioAmplifier*)
0001df9c g     F .text.itcm	0000000e String::~String()
60035000 g       .text.csf	00000000 __text_csf_end
00023328 g     F .text.itcm	00000010 .hidden __math_oflow
60001e34 g     F .text.code	0000005c usb_pll_start
00026b4c g     F .text.itcm	000000c0 __pow5mult
000187b4 g     F .text.itcm	00000090 FatFile::rmdir()
0001d25c g     F .text.itcm	0000000c lpi2c4_isr()
00023fa4 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
20014004 g     O .bss	00000014 outr_4b
0001a084 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
20013a80 g     O .bss	00000006 lt_pkt
200070c8 g     O .bss	0000009c bqMancsDin
0001b608  w    F .text.itcm	00000002 SdioCard::end()
20006a6c g     O .bss	00000004 AudioOutputPT8211::block_right_1st
000158d4  w    F .text.itcm	00000036 SDClass::exists(char const*)
0000f340 g     F .text.itcm	00000748 Display::go(bool, int, bool)
20006984 g     O .bss	00000004 AudioStream::unused
20005f20 g     O .bss	00000020 endpoint0_transfer_ack
20014c24 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
000202c4 g     F .text.itcm	00000028 usb_transmit
0001d484 g     F .text.itcm	00000064 software_isr()
00008610 g     F .text.itcm	00000d0c Cuntzertu::serialize(Stream*)
0001da54 g     F .text.itcm	00000020 systick_isr
20006f70 g     O .bss	00000020 ampR
0002665c g     F .text.itcm	00000002 __retarget_lock_release_recursive
20006910 g     O .bss	00000004 AudioStream::first_update
20004d00 g     O .data	00000010 Serial
20014da6 g     O .bss	00000002 AudioStream::memory_used_max
0001d828 g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
00001758 g     F .text.itcm	0000005c Cuntzertu::syncBT1(Stream*)
0001e0a8 g     F .text.itcm	0000000e String::operator=(String const&)
20000ed0 g     O .data	00001048 .hidden __pow_log_data
000115a0  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
0001dcd4  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
0001a6b8 g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
20014de9 g     O .bss	00000001 usb_audio_receive_setting
60001990  w    F .text.code	00000002 startup_early_hook
0000a1c0 g     F .text.itcm	00000008 Communicator::Communicator(Stream*)
000233a0 g     F .text.itcm	00000028 .hidden __math_check_oflow
0001657c g     F .text.itcm	00000092 ExFatFile::addCluster()
20003d00  w    O .data	0000002c vtable for File
0001aa88 g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
0001590c  w    F .text.itcm	000000f0 SDClass::usedSize()
0001396c g     F .text.itcm	00000148 AudioEffectFreeverb::AudioEffectFreeverb()
000217b0 g     F .text.itcm	00000044 usb_serial_peekchar
0000bb80  w    F .text.itcm	00000090 Encoder::isr47()
000010e0 g     F .text.itcm	00000006 Canna::setMixer(AudioMixer4*)
00001858 g     F .text.itcm	00000006 Cuntzertu::getBilMs()
00022930 g     F .text.itcm	00000080 cos
00027480 g     F .text.itcm	0000000c __sfp_lock_acquire
000274a0 g     F .text.itcm	00000000 memchr
0001a144 g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
0000bc10  w    F .text.itcm	00000090 Encoder::isr48()
0000b9d0  w    F .text.itcm	00000090 Encoder::isr44()
20013cc8 g     O .bss	00000004 mon_mode
0001e464 g     F .text.itcm	000002f0 set_arm_clock
200149a8 g     O .bss	00000004 systick_cycle_count
200059c4 g     O .data	00000016 usb_string_serial_number_default
20003bd8  w    O .data	0000000c vtable for SPISlave_T4<&SPI1, (SPI_BITS)8>
00027aa8 g     F .text.itcm	0000020c _free_r
0001b248 g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
20014c5c g     O .bss	00000004 usb_midi_handleStop
0001b450 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
0001bd28 g     F .text.itcm	000000b8 SdioCard::readStop()
00015250 g     F .text.itcm	00000088 BandLimitedWaveform::init_pulse(unsigned long, unsigned long)
0001a880  w    F .text.itcm	00000004 SharedSpiCard::type() const
00026660 g     F .text.itcm	0000000c __locale_mb_cur_max
00001120 g     F .text.itcm	00000430 Canna::update(float, float, float, float)
00029418 g     F .text.itcm	00000016 _wcsrtombs_r
00000e98 g     F .text.itcm	000000d4 Canna::Canna(unsigned char)
00021c14 g     F .text.itcm	00000068 HardwareSerialIMXRT::end()
00022034 g     F .text.itcm	00000004 HardwareSerialIMXRT::write(unsigned char)
20006c44 g     O .bss	00000190 __atexit0
0000b284  w    F .text.itcm	00000090 Encoder::isr38()
00001be8 g     F .text.itcm	00000006 Cuntzertu::getFini()
00020a28  w    F .text.itcm	00000004 usb_serial_class::flush()
00017100 g     F .text.itcm	000000b0 ExFatFormatter::writeUpcase(unsigned long)
00023ca0 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20014c38 g     O .bss	00000004 usb_midi_handleControlChange
0001da74 g     F .text.itcm	0000000c IRQHandler_Serial5
20005724 g     O .data	00000004 __malloc_sbrk_base
0001de70  w    F .text.itcm	00000004 usb_serial_class::read()
20006a5c g     O .bss	00000008 AudioOutputI2SOct::dma
00019518 g     F .text.itcm	00000110 FatFile::remove()
20013ff0 g     O .bss	00000014 outr_4
00023258 g     F .text.itcm	00000080 sin
00023fa4 g     F .text.itcm	0000006a .hidden __floatundidf
0001e014 g     F .text.itcm	0000002e String::String(unsigned char)
0001f6c4  w    F .text.itcm	00000006 _lseek
0001f6cc  w    F .text.itcm	00000004 __cxa_pure_virtual
00026c0c g     F .text.itcm	000000f0 __lshift
0001811c g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00020294 g     F .text.itcm	00000030 usb_prepare_transfer
00021ae8 g     F .text.itcm	0000007a HardwareSerialIMXRT::peek()
0001a884  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
0001f4e8 g     F .text.itcm	0000018c unused_interrupt_vector
200069ac g     O .bss	00000004 AudioInputUSB::incoming_left
20014a18 g     O .bss	00000014 t2_2
00024184 g     F .text.itcm	0000001c .hidden __floatsisf
00002794 g     F .text.itcm	00000006 Canna::playCrai(unsigned char)
20014d9c g     O .bss	00000004 usb_timer0_callback
60001e90 g     F .text.code	00000130 tempmon_init
00018e6c g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
00010cf0 g     F .text.itcm	00000104 ElFileSystem::newFile(String)
200069dc g     O .bss	00000010 AudioOutputPWM::dma
00029000 g     F .text.itcm	00000088 __register_exitproc
0001da8c  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#4}::_FUN(void*)
0001a88c g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0001e0b8 g     F .text.itcm	0000002a String::operator=(String&&)
0001d644 g     F .text.itcm	00000046 AudioStream::receiveWritable(unsigned int)
00016450 g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
000010d8 g     F .text.itcm	00000006 Canna::setSynth(AudioSynthWaveform2*)
0001e9dc g     F .text.itcm	0000007c eeprom_read_byte
00025cfc g     F .text.itcm	0000008a strncmp
0000a54c  w    F .text.itcm	0000008c Encoder::isr14()
00018db0 g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
2000599c g     O .data	00000007 scala
00016a70 g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
00019868 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000b550  w    F .text.itcm	00000090 Encoder::isr50()
0001e1bc g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
20007200 g     O .bss	0000009c bqOutL
000115c4  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
0002180c g     F .text.itcm	00000070 usb_serial_flush_input
00017c18 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
000269f0 g     F .text.itcm	0000015c __multiply
20006340 g     O .bss	00000008 Entropy
20006f90 g     O .bss	0000009c bqMancdDin
00022298 g     F .text.itcm	0000057c pow
0002189c g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0001acc4 g     F .text.itcm	000001f4 SharedSpiCard::begin(SdSpiConfig)
20006a14 g     O .bss	00000008 AudioOutputI2S2::dma
20003cc4 g     O .data	0000000c vtable for AudioSynthWaveform2
00025d88 g     F .text.itcm	00000064 strncpy
00021b64 g     F .text.itcm	00000092 HardwareSerialIMXRT::read()
20006de0 g     O .bss	00000028 __malloc_current_mallinfo
200069b4 g     O .bss	00000008 AudioInputI2S2::dma
20006a70 g     O .bss	00000004 AudioOutputPT8211::block_right_2nd
200059b8 g     O .data	0000000c sulProgZData
200039fc g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
00026fbc g     F .text.itcm	000000d4 __d2b
0001b4b8 g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
20005750 g     O .data	00000005 crais_md_med
20003be4 g     O .data	0000000c vtable for AudioAmplifier
0001b600  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
600020a8 g     F .text.code	00000054 _reboot_Teensyduino_
0001b79c  w    F .text.itcm	0000000e SdioCard::~SdioCard()
20007470 g     O .bss	00000004 c
60001994 g     F .text.code	00000002 startup_default_middle_hook
00027300 g     F .text.itcm	00000018 realloc
0001a918 g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0001af30 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
0000f010  w    F .text.itcm	00000198 GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::update()
000110d4 g     F .text.itcm	0000010c ElFileSystem::savePrefs(Cuntzertu*)
0001bc54 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
0000c074  w    F .text.itcm	0000008c Encoder::isr8()
0001f9bc g     F .text.itcm	00000740 usb_isr
000265f0 g     F .text.itcm	0000000c __cxa_atexit
00015e00 g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
0001d85c g     F .text.itcm	00000044 AudioStream::update_setup()
0001d68c g     F .text.itcm	00000018 AudioConnection::AudioConnection()
0000bf5c  w    F .text.itcm	0000008c Encoder::isr6()
20013f78 g     O .bss	00000014 outl_2
0002a244 g     F .text.itcm	00000024 _close_r
00019dd0  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20014c3c g     O .bss	00000004 usb_midi_handleNoteOff
00023f3c g     F .text.itcm	00000022 .hidden __aeabi_i2d
00001568 g     F .text.itcm	000001f0 Cuntzertu::Cuntzertu()
000017b4 g     F .text.itcm	00000006 Cuntzertu::getNome()
0001db34 g     F .text.itcm	00000104 IntervalTimer::beginCycles(teensy::inplace_function<void (), 16u, 8u>, unsigned long)
0001ab14 g     F .text.itcm	0000006e SharedSpiCard::readStop()
00014b84  w    F .text.itcm	00000018 SDFile::peek()
0001cb18 g     F .text.itcm	00000056 FsCache::sync()
20006a94 g     O .bss	00000008 AudioOutputPT8211_2::dma
00011090 g     F .text.itcm	00000044 ElFileSystem::cuntzFromFile(Cuntzertu*, String, bool, char)
20013a48 g     O .bss	00000038 lMixer
0000db20 g     F .text.itcm	00000010 Display::refreshBattery()
20014018 g     O .bss	00000014 outriv_1
000152d8 g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
0000fc54 g     F .text.itcm	00000032 Display::setEnabled(bool)
20004cb0 g     O .data	00000050 SPI
20005894 g     O .data	00000080 isr_table_gpio3
000263b4 g     F .text.itcm	00000060 memcmp
20003c78  w    O .data	00000028 vtable for usb_serial_class
0001cab4 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
0000baf0  w    F .text.itcm	00000090 Encoder::isr46()
200149b4 g     O .bss	00000014 t1_0
0000bfe8  w    F .text.itcm	0000008c Encoder::isr7()
0001deec g     F .text.itcm	0000003a String::String(char const*)
00026654 g     F .text.itcm	00000002 __retarget_lock_close_recursive
00001cc8 g     F .text.itcm	0000026c Cuntzertu::setVerb(float, float, float)
000241a0 g     F .text.itcm	0000008c .hidden __floatundisf
0001c9e0 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
20014150 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20014ddb g     O .bss	00000001 last_error_mem
00029274 g     F .text.itcm	000000cc __swsetup_r
00024524  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
000166c4 g     F .text.itcm	0000005e ExFatFile::rmdir()
20006a2c g     O .bss	00000008 AudioInputI2SHex::dma
0001b040 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
000270f4 g     F .text.itcm	0000005c __copybits
00011e68 g     F .text.itcm	00000044 restore()
0001de78 g     F .text.itcm	00000074 Stream::readBytes(char*, unsigned int)
2000531c g     O .data	00000408 __malloc_av_
0002417c g     F .text.itcm	00000024 .hidden __aeabi_ui2f
20006c40 g     O .bss	00000004 __atexit
20014068 g     O .bss	00000024 peak
00014bdc  w    F .text.itcm	00000014 SDFile::flush()
00027e3c g     F .text.itcm	00000022 __sread
0000fec4 g     F .text.itcm	000003c4 Display::Display()
20013d44 g     O .bss	00000038 msMixer
0000a664  w    F .text.itcm	0000008c Encoder::isr16()
20005f60 g     O .bss	00000020 rx_transfer
00021930 g     F .text.itcm	00000094 usb_serial_flush_output
20013d1c g     O .bss	00000014 ms2_1
00015098 g     F .text.itcm	000000a4 BandLimitedWaveform::process_active_steps(unsigned long)
2000698c g     O .bss	00000008 AudioInputI2S::dma
00026728 g     F .text.itcm	0000000c __malloc_lock
00021bf8 g     F .text.itcm	0000001a HardwareSerialIMXRT::flush()
00017728 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
20005c00 g     O .data	000002c0 _VectorsRam
20003bf0 g     O .data	0000000c vtable for AudioOutputUSB
0001cac8 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00019694 g     F .text.itcm	00000120 FatFormatter::initFatDir(unsigned char, unsigned long)
0002a398 g     F .text.itcm	00000054 _fflush_r
00027288 g     F .text.itcm	00000078 _calloc_r
0001543c g     F .text.itcm	00000234 SPIClass::begin()
00025c5c g     F .text.itcm	0000009c __utoa
00001c2c g     F .text.itcm	00000028 Cuntzertu::setSulProgS(unsigned char)
000191ac g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
20014df6 g     O .bss	00000001 yield_active_check_flags
0001685c g     F .text.itcm	0000005e ExFatFile::sync()
00026658 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20014def g     O .bss	00000001 usb_high_speed
000185c8 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
0001bb8c g     F .text.itcm	0000007c SdioCard::isBusy()
20006a4c g     O .bss	00000008 AudioInputI2SQuad::dma
0002654c g     F .text.itcm	000000a4 memset
00022b98 g     F .text.itcm	00000006 __ieee754_sqrtf
20013f8c g     O .bss	00000014 outl_4
0001ee38 g     F .text.itcm	00000010 main
200069cc g     O .bss	00000008 AudioOutputI2S::dma
00003374 g     F .text.itcm	00000010 Cuntzertu::setCuntz(unsigned char)
20006e0c g     O .bss	00000004 __malloc_max_total_mem
00001850 g     F .text.itcm	00000006 Cuntzertu::getVolT()
00017860 g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
2000578c g     O .data	00000008 encoderTimer
00026650 g     F .text.itcm	00000002 __retarget_lock_init_recursive
000112b0 g     F .text.itcm	00000170 monitoring()
20201e00 g     O .bss.dma	00000155 usb_descriptor_buffer
000241b0 g     F .text.itcm	0000007c .hidden __aeabi_l2f
0000b820  w    F .text.itcm	00000090 Encoder::isr41()
0001b520 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
0001d2f4 g     F .text.itcm	00000058 EntropyClass::available()
00016da4 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
0001cc0c g     F .text.itcm	000000a0 lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
200073d4 g     O .bss	0000009c bqTumbuStat2
00017f1c g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
00014cb0  w    F .text.itcm	0000004c SDFile::available()
00027ec0 g     F .text.itcm	00000008 __sclose
20003cb8 g     O .data	0000000c vtable for AudioEffectFreeverb
0000611c  w    F .text.itcm	0000006a ArduinoJson::V6215PB2::detail::VariantData* ArduinoJson::V6215PB2::detail::variantGetMember<ArduinoJson::V6215PB2::detail::StaticStringAdapter>(ArduinoJson::V6215PB2::detail::VariantData const*, ArduinoJson::V6215PB2::detail::StaticStringAdapter)
000209c8 g     F .text.itcm	00000058 usb_init_serialnumber
600021e0 g       .text.code	00000000 __init_array_end
00011728 g     F .text.itcm	0000000c getCharge()
00029558 g     F .text.itcm	00000cec _dtoa_r
00025e54 g     F .text.itcm	00000560 _malloc_r
0001b178 g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
0000bdb8  w    F .text.itcm	0000008c Encoder::isr3()
00027ec8 g     F .text.itcm	0000001a __ascii_wctomb
20014c50 g     O .bss	00000004 usb_midi_handleSongPosition
0001e394 g     F .text.itcm	0000000a String::toInt() const
0000b4c0  w    F .text.itcm	00000090 Encoder::isr49()
20014deb g     O .bss	00000001 usb_audio_sync_rshift
00014760  w    F .text.itcm	00000012 SDFile::isOpen()
0000b314  w    F .text.itcm	00000090 Encoder::isr39()
0001a4a8 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00023fb4 g     F .text.itcm	0000005a .hidden __aeabi_l2d
20006bdc g     O .bss	00000004 FatVolume::m_cwv
20006a34 g     O .bss	00000008 AudioInputI2SOct::dma
0000a808  w    F .text.itcm	0000008c Encoder::isr19()
00001c00 g     F .text.itcm	00000006 Cuntzertu::getPuntu()
000116c4  w    F .text.itcm	00000064 AudioSynthWaveform2::AudioSynthWaveform2()
20003ecc  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0001d988 g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
20014c34 g     O .bss	00000004 usb_midi_handleContinue
20014df3 g     O .bss	00000001 usb_midi_msg_data2
00015670 g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
0001e7fc g     F .text.itcm	00000054 micros
2000729c g     O .bss	0000009c bqOutR
000241a0 g     F .text.itcm	0000008c .hidden __aeabi_ul2f
00013d40 g     F .text.itcm	000000f0 AudioMixer4::update()
00016724 g     F .text.itcm	00000138 ExFatFile::syncDir()
20013fdc g     O .bss	00000014 outr_2
00011944 g     F .text.itcm	000000e4 setCannas()
20007484 g     O .bss	00000004 d
00027a08 g     F .text.itcm	000000a0 _malloc_trim_r
0000bd2c  w    F .text.itcm	0000008c Encoder::isr2()
0002a94c g     F .text.itcm	00000106 _wcsnrtombs_l
60003488 g     O .text.progmem	00000004 string0
000218c8 g     F .text.itcm	00000018 usb_serial_write
00001f3c g     F .text.itcm	00000006 Cuntzertu::getVerbDamp()
00000bc8 g     F .text.itcm	000002d0 Crai::parse(String)
0000fa88 g     F .text.itcm	000001c4 Display::pollEncoder()
60001998  w    F .text.code	00000002 startup_late_hook
0001f958 g     F .text.itcm	00000038 usb_start_sof_interrupts
00023388 g     F .text.itcm	00000012 .hidden __math_check_uflow
0001b5b8 g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
00002ccc g     F .text.itcm	00000052 Canna::sync()
00020a24  w    F .text.itcm	00000004 usb_serial_class::available()
0000f274 g     F .text.itcm	0000008c Display::move(int)
0000b434  w    F .text.itcm	0000008c Encoder::isr0()
00018aa4 g     F .text.itcm	0000000c FatFile::sync()
20014df0 g     O .bss	00000001 usb_midi_msg_cable
00012fd0 g     F .text.itcm	00000042 AudioAnalyzePeak::update()
00019b48 g     F .text.itcm	000000b4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00015898  w    F .text.itcm	0000003a SDClass::mkdir(char const*)
20014054 g     O .bss	00000014 outriv_4
20000000 g     O .data	00000380 endpoint_queue_head
6000344c  w    O .text.progmem	00000024 usb_string_product_name
0001e754 g     F .text.itcm	000000a8 delay
0002aaa8 g     F .text.itcm	00000040 .hidden __fixunsdfdi
20014db6 g     O .bss	00000002 dma_channel_allocated_mask
00015d18 g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
0002ab10 g     F .fini	00000000 _fini
0001e0e4 g     F .text.itcm	00000022 String::operator=(char const*)
000152d8 g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
20014a64 g     O .bss	00000190 tSynth
0001cee8 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
0001aa08 g     F .text.itcm	0000007e SharedSpiCard::isBusy()
20006a74 g     O .bss	00000008 AudioOutputPT8211::dma
60001020 g     O .text.headers	0000000c BootData
00001c08 g     F .text.itcm	00000006 Cuntzertu::getSulProgZ()
200069d4 g     O .bss	00000008 AudioOutputMQS::dma
0000cedc g     F .text.itcm	00000080 Display::drawMenu()
20014c18 g     O .bss	00000004 usb_audio_underrun_count
00016558 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
0001ddf8 g     F .text.itcm	00000016 Print::print(long)
00017efc g     F .text.itcm	0000001e FatFile::close()
0001f6d4 g     F .text.itcm	00000004 Panic_Temp_isr
0002aa78 g     F .text.itcm	00000030 .hidden __fixdfdi
00020d3c g     F .text.itcm	00000010 usb_midi_write_packed
0000b790  w    F .text.itcm	00000090 Encoder::isr54()
00014d90  w    F .text.itcm	00000048 SDFile::~SDFile()
00025398 g     F .text.itcm	000000a4 strtof
00017fb0 g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
0002aa54 g     F .text.itcm	00000024 _wcsnrtombs_r
0001b798  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0001029c  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00014cfc  w    F .text.itcm	00000054 File::write(unsigned char)
00027f50 g     F .text.itcm	0000002c _write_r
00020840 g     F .text.itcm	000000e8 usb_audio_configure
0001da88  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*, void*)#3}::_FUN(void*, void*)
0001e014 g     F .text.itcm	0000002e String::String(unsigned char)
0001efe8 g     F .text.itcm	0000001e ltoa
000104ec g     F .text.itcm	00000090 ElFileSystem::ElFileSystem()
0000a228 g     F .text.itcm	0000003c Communicator::msgWarning(String, bool)
20006348 g     O .bss	000004d4 SD
0001befc g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
00024010 g     F .text.itcm	0000016c .hidden __aeabi_frsub
0001d594 g     F .text.itcm	00000050 AudioStream::release(audio_block_struct*)
00001bf8 g     F .text.itcm	00000006 Cuntzertu::getModal()
20006140 g     O .bss	00000020 sync_transfer
00010b60 g     F .text.itcm	00000190 ElFileSystem::torra(int)
0001deec g     F .text.itcm	0000003a String::String(char const*)
0000afb4  w    F .text.itcm	00000090 Encoder::isr33()
20013fb4 g     O .bss	00000014 outl_5
00022814 g     F .text.itcm	0000000c nanf
00020df0 g     F .text.itcm	000000a8 usb_midi_read_message
20005738 g     O .data	00000004 _impure_ptr
20007498 g     O .bss	00000004 enc_puls_count
20003dac  w    O .data	00000024 vtable for Stream
00011664  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
00015fa0 g     F .text.itcm	0000002c ExFatFile::peek()
0002a268 g     F .text.itcm	00000130 __sflush_r
00023b80 g     F .text.itcm	0000010c scalbn
20003b9c  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20006a44 g     O .bss	00000008 AudioOutputSPDIF::dma
20004d70 g     O .data	00000140 Wire
00014c48  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
0001d5e4 g     F .text.itcm	00000046 AudioStream::transmit(audio_block_struct*, unsigned char)
0001a814 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00027f08 g     F .text.itcm	00000046 _fwalk_sglue
0001b728 g     F .text.itcm	0000000c SdioCard::errorCode() const
0001dc38 g     F .text.itcm	00000070 IntervalTimer::end()
20014c70 g     O .bss	00000004 usb_midi_handleTuneRequest
0001830c g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
000102ec  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60002160 g       .text.code	00000000 __preinit_array_end
2000699c g     O .bss	00000008 AudioInputTDM::dma
20005748 g     O .data	00000005 crais_md_fiu
20006a1c g     O .bss	00000008 AudioOutputTDM2::dma
00017a18 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
20014df1 g     O .bss	00000001 usb_midi_msg_channel
00029088 g     F .text.itcm	0000002a __ascii_mbtowc
0000b164  w    F .text.itcm	00000090 Encoder::isr36()
0000a77c  w    F .text.itcm	0000008c Encoder::isr18()
00026e94 g     F .text.itcm	00000064 __ulp
0001d4e8 g     F .text.itcm	000000ac AudioStream::allocate()
0000b3a4  w    F .text.itcm	00000090 Encoder::isr40()
0001f990 g     F .text.itcm	0000002c usb_stop_sof_interrupts
0001a83c g     F .text.itcm	00000034 FsVolume::open(String const&, int)
00003d0c  w    F .text.itcm	0000023c ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<Stream, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseQuotedString()
0000ad80  w    F .text.itcm	0000008c Encoder::isr29()
0001cecc  w    F .text.itcm	00000018 TwoWire::peek()
00012688 g     F .text.itcm	00000028 resetController()
0001cee4  w    F .text.itcm	00000002 TwoWire::flush()
00011bb8 g     F .text.itcm	000002b0 setup
20004b08 g     O .data	0000006c usb_descriptor_list
000037a8  w    F .text.itcm	000000d6 ArduinoJson::V6215PB2::detail::VariantData* ArduinoJson::V6215PB2::detail::variantGetOrAddMember<ArduinoJson::V6215PB2::detail::StaticStringAdapter>(ArduinoJson::V6215PB2::detail::VariantData*, ArduinoJson::V6215PB2::detail::StaticStringAdapter, ArduinoJson::V6215PB2::detail::MemoryPool*)
00003384 g     F .text.itcm	00000038 Cuntzertu::setModal(unsigned char)
0001bc08 g     F .text.itcm	00000020 SdioCard::status()
0000a6f0  w    F .text.itcm	0000008c Encoder::isr17()
0000db30 g     F .text.itcm	0000066a Display::drawKnob(unsigned char, unsigned char, float, float, float, String, bool)
00017f90 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
00022e38 g     F .text.itcm	00000204 sinf
000201c4 g     F .text.itcm	00000064 usb_config_rx_iso
0000a268  w    F .text.itcm	00000002 Print::flush()
0000a290  w    F .text.itcm	0000008c Encoder::isr9()
20014c58 g     O .bss	00000004 usb_midi_handleStart
20006a64 g     O .bss	00000004 AudioOutputPT8211::block_left_1st
20013f28 g     O .bss	00000020 mySPI
00027620 g     F .text.itcm	00000010 nan
0001578c  w    F .text.itcm	00000052 SDClass::rmdir(char const*)
20003cac g     O .data	0000000c vtable for AudioOutputPT8211
000183b4 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
20013fa0 g     O .bss	00000014 outl_4b
20014dcf g     O .bss	00000001 AudioOutputPT8211::update_responsibility
2001408c g     O .bss	00000020 pt8211_1
000033c0  w    F .text.itcm	00000118 unsigned short ArduinoJson::V6215PB2::detail::VariantData::asIntegral<unsigned short>() const
00018378 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
20006988 g     O .bss	00000004 ExFatVolume::m_cwv
00022b90 g     F .text.itcm	00000006 __ieee754_sqrt
20050000 g       .text.csf	00000000 _estack
0001a72c g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
20005760 g     O .data	00000005 crais_ms_fio
0001d954 g     F .text.itcm	00000034 DMAChannel::release()
00014bf0  w    F .text.itcm	00000058 File::read()
000218e0 g     F .text.itcm	00000050 usb_serial_write_buffer_free
0000a26c  w    F .text.itcm	00000004 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*)#1}::_FUN(void*)
0000b670  w    F .text.itcm	00000090 Encoder::isr52()
0001d6a4 g     F .text.itcm	000000d0 AudioConnection::connect()
20007338 g     O .bss	0000009c bqTumbuStat1
60001784 g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
00001bf0 g     F .text.itcm	00000006 Cuntzertu::getCuntz()
0000bed0  w    F .text.itcm	0000008c Encoder::isr5()
2000572c g     O .data	0000000c __sglue
20006994 g     O .bss	00000008 AudioInputPDM::dma
000215d0 g     F .text.itcm	00000100 usb_serial_configure
0001cf14 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
0001396c g     F .text.itcm	00000148 AudioEffectFreeverb::AudioEffectFreeverb()
20014dcc g     O .bss	00000001 AudioInputUSB::receive_flag
00014f10  w    F .text.itcm	000000b0 File::~File()
0001de2c  w    F .text.itcm	0000001c _write
0001e1d8 g     F .text.itcm	0000001e operator+(StringSumHelper const&, char)
200069bc g     O .bss	00000008 AudioInputPDM2::dma
20005ec0 g       .data	00000000 _edata
200149dc g     O .bss	00000014 t1_2
00017b18 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
20014dd8 g     O .bss	00000001 external_psram_size
0001b798  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0001cbc0 g     F .text.itcm	0000004c FsName::get16()
20006f50 g     O .bss	00000020 ampL
0000a9ac  w    F .text.itcm	0000008c Encoder::isr22()
0001a8fc  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0001b104 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0001ab9c g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
000177f4 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
20005190 g     O .data	0000000c AudioInputUSB::features
00017e64 g     F .text.itcm	00000078 FatFile::addDirCluster()
0002a494 g     F .text.itcm	000000aa __fputwc
0000d04c g     F .text.itcm	00000270 Display::clearRect(int, int, int, int)
00020a2c  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
200059f5 g     O .data	00000001 gWDT_trng_index
0001d244 g     F .text.itcm	0000000c lpi2c1_isr()
0000a278  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#3}::_FUN(void*, void*)
00019e48 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
00021f18 g     F .text.itcm	00000040 nvic_execution_priority()
20014c30 g     O .bss	00000004 usb_midi_handleClock
0001160c  w    F .text.itcm	00000058 AudioFilterBiquad::AudioFilterBiquad()
20005914 g     O .data	00000080 isr_table_gpio4
00023214 g     F .text.itcm	00000024 .hidden __math_divzerof
0001ef84 g     F .text.itcm	00000062 ultoa
20005740 g     O .data	00000005 crais_md_fio
000047e0  w    F .text.itcm	00000052 ArduinoJson::V6215PB2::DeserializationError ArduinoJson::V6215PB2::detail::deserialize<ArduinoJson::V6215PB2::detail::JsonDeserializer, Stream&, , void>(ArduinoJson::V6215PB2::JsonDocument&, Stream&)
000156c0  w    F .text.itcm	00000002 SDClass::~SDClass()
600017dc g     F .text.code	00000068 TwoWire::begin()
00011420 g     F .text.itcm	000000f8 receiving()
00005450  w    F .text.itcm	000001d8 ArduinoJson::V6215PB2::detail::JsonDeserializer<ArduinoJson::V6215PB2::detail::Reader<char const*, void>, ArduinoJson::V6215PB2::detail::StringCopier>::parseQuotedString()
0001a608 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
20013b00 g     O .bss	00000038 mdMixer
0001e3a0 g     F .text.itcm	00000014 String::toFloat() const
00003880 g     F .text.itcm	00000138 Biquad::serialize(ArduinoJson::V6215PB2::JsonObject)
0000b8b0  w    F .text.itcm	00000090 Encoder::isr42()
00001848 g     F .text.itcm	00000006 Cuntzertu::getVolMd()
00027e60 g     F .text.itcm	0000003e __swrite
0001ef7c g     F .text.itcm	00000004 operator new(unsigned int)
0001da0c g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
20005728 g     O .data	00000004 __malloc_trim_threshold
0001de74  w    F .text.itcm	00000004 usb_serial_class::peek()
0001d794 g     F .text.itcm	00000094 AudioConnection::disconnect()
0000ba60  w    F .text.itcm	00000090 Encoder::isr45()
000265fc g     F .text.itcm	0000000a fcvtf
00003acc g     F .text.itcm	00000240 Canna::serialize(ArduinoJson::V6215PB2::JsonObject)
0001b604  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000a3a8  w    F .text.itcm	0000008c Encoder::isr11()
00027e14 g     F .text.itcm	00000028 fiprintf
000206dc g     F .text.itcm	00000104 usb_audio_transmit_callback
00027ff4 g     F .text.itcm	00000f8c _vfiprintf_r
00013038  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
0002417c g     F .text.itcm	00000024 .hidden __floatunsisf
00026d40 g     F .text.itcm	00000154 __mdiff
0001b788 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
00023318 g     F .text.itcm	00000010 .hidden __math_uflow
00017a50 g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
20014c44 g     O .bss	00000004 usb_midi_handlePitchChange
0001440c g     F .text.itcm	00000098 AudioOutputPT8211::update()
00019cbc g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
20006a54 g     O .bss	00000008 AudioOutputI2SHex::dma
20004b88 g     O .data	00000120 _impure_data
00006188 g     F .text.itcm	0000035c Biquad::deserialize(ArduinoJson::V6215PB2::JsonObject)
000160b8 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
20014da8 g     O .bss	00000002 AudioStream::cpu_cycles_total
20006ba4 g     O .bss	00000034 Cuntzertu::acordadura
0002748c g     F .text.itcm	0000000c __sfp_lock_release
20013b38 g     O .bss	00000190 mdSynth
0001bd28 g     F .text.itcm	000000b8 SdioCard::writeStop()
00002e40 g     F .text.itcm	00000344 Cuntzertu::sync()
000115a0  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
000039b8 g     F .text.itcm	00000114 Crai::serialize(ArduinoJson::V6215PB2::JsonObject)
0000fec4 g     F .text.itcm	000003c4 Display::Display()
0001e220 g     F .text.itcm	00000028 operator+(StringSumHelper const&, int)
0000a5d8  w    F .text.itcm	0000008c Encoder::isr15()
20014c6c g     O .bss	00000004 usb_midi_handleTimeCodeQuarterFrame
00015ce0 g     F .text.itcm	00000014 ExFatFile::close()
00002118 g     F .text.itcm	000003b0 Cuntzertu::timerRoutine()
20004178 g     O .data	00000101 _ctype_
0001f6a8  w    F .text.itcm	00000004 _read
60002160 g       .text.code	00000000 __init_array_start
00024524  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
0001e3b4 g     F .text.itcm	000000b0 analogRead
20004ca8 g     O .data	00000004 F_BUS_ACTUAL
20014a04 g     O .bss	00000014 t2_1
00000aec g     F .text.itcm	000000dc Biquad::parse(String)
0000b5e0  w    F .text.itcm	00000090 Encoder::isr51()
00017074 g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
0001da80  w    F .text.itcm	00000002 teensy::inplace_function_detail::vtable<void>::vtable()::{lambda(void*)#1}::_FUN(void*)
20014c78 g     O .bss	00000122 usb_midi_msg_sysex
000157e0  w    F .text.itcm	00000064 SDClass::rename(char const*, char const*)
20004770 g     O .data	0000002a pin_to_channel
0000ab50  w    F .text.itcm	0000008c Encoder::isr25()
0000a1cc g     F .text.itcm	00000014 Communicator::msgInfo(String)
00001840 g     F .text.itcm	00000006 Cuntzertu::getVolMs()
00014554 g     F .text.itcm	00000118 AudioOutputPT8211::begin()
200074c4 g     O .bss	000062a0 freeverbL
2000573c g     O .data	00000004 charge
0001d478  w    F .text.itcm	0000000c AudioStream::update_all()
00029340 g     F .text.itcm	000000d8 __smakebuf_r
0001df60 g     F .text.itcm	0000003a String::String(char)
0000e19c  w    F .text.itcm	000006fe GyverOLED<2, 1, 0, (signed char)-1, (signed char)-1, (signed char)-1>::roundRect(int, int, int, int, unsigned char)
00000000 g       .text.itcm	00000000 _stext
0001d8a0 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
2000519c g     O .data	00000004 IntervalTimer::nvic_priorites
0001e2c4 g     F .text.itcm	00000022 String::indexOf(char, unsigned int) const
0000a270  w    F .text.itcm	00000006 teensy::inplace_function_detail::vtable<void>::vtable<void (*)()>(teensy::inplace_function_detail::wrapper<void (*)()>)::{lambda(void*, void*)#2}::_FUN(void*, void*)
0001a900  w    F .text.itcm	00000006 SharedSpiCard::end()
20013ad8 g     O .bss	00000014 md2_1
00027540 g     F .text.itcm	000000dc strlen
0001831c g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
20014ddd g     O .bss	00000001 lt_pr
00001868 g     F .text.itcm	00000006 Cuntzertu::getBilT()
00018844 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0000a284  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
000254e0 g     F .text.itcm	00000594 __gethex
6000344c g     O .text.progmem	00000024 usb_string_product_name_default
00000f6c g     F .text.itcm	0000016c Canna::setSonu(unsigned char)
00013cc0 g     F .text.itcm	0000007e AudioAmplifier::update()
20006a8c g     O .bss	00000008 AudioOutputI2SQuad::dma
20005758 g     O .data	00000005 crais_md_po
0001b7c8 g     F .text.itcm	00000068 SdioCard::sectorCount()
20014dd5 g     O .bss	00000001 bt_control
000189d8 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
000271b4 g     F .text.itcm	000000cc strchr
2000748c g     O .bss	00000004 enc_count
00021aa0 g     F .text.itcm	00000020 HardwareSerialIMXRT::availableForWrite()
20006a00 g     O .bss	00000004 AudioOutputUSB::right_2nd
60001994  w    F .text.code	00000002 startup_middle_hook
0001ddac g     F .text.itcm	0000004c Print::print(String const&)
20003e24 g     O .data	00000070 vtable for SdioCard
00023f60 g     F .text.itcm	00000042 .hidden __aeabi_f2d
200140ac g     O .bss	00000038 rMixer
20004094 g     O .data	00000060 .hidden __inv_pio4
00019dcc g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
0000e89c g     F .text.itcm	000006c4 Display::displayPage()
600019a0 g     F .text.code	00000110 configure_cache
0001b5fc  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000a894  w    F .text.itcm	0000008c Encoder::isr20()
0001b360  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
0000b940  w    F .text.itcm	00000090 Encoder::isr43()
20006a7c g     O .bss	00000008 AudioOutputSPDIF2::dma
0001c638 g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00020228 g     F .text.itcm	0000006c usb_config_tx_iso
20006a24 g     O .bss	00000008 AudioInputAnalog::dma
20014daa g     O .bss	00000002 AudioStream::cpu_cycles_total_max
0001c9e4 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
000024d0 g     F .text.itcm	00000074 Cuntzertu::calcFrequenza(unsigned char)
00023ca0 g     F .text.itcm	0000027a .hidden __subdf3
60002160 g       .text.code	00000000 __preinit_array_start
000202ec g     F .text.itcm	0000001c usb_receive
20003bcc  w    O .data	0000000c vtable for AudioStream
00017920 g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00001568 g     F .text.itcm	000001f0 Cuntzertu::Cuntzertu()
00026934 g     F .text.itcm	00000060 __lo0bits
0000cf5c g     F .text.itcm	000000f0 Display::test()
20003ca0 g     O .data	0000000c vtable for AudioFilterBiquad
000179cc g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
000188f4 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00035000 g       *ABS*	00000000 _flashimagelen
20006ac4 g     O .bss	000000dc Encoder::interruptArgs
00018ab0 g     F .text.itcm	000000d8 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
0001ab84 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
200059dc g     O .data	00000018 waves
00023c8c g     F .text.itcm	0000000a __aeabi_atexit
20014c54 g     O .bss	00000004 usb_midi_handleSongSelect
00001838 g     F .text.itcm	00000006 Cuntzertu::getVol()
0001f4c4 g     F .text.itcm	00000024 rtc_get
00016610 g     F .text.itcm	000000b4 ExFatFile::remove()
0002401c g     F .text.itcm	00000160 .hidden __addsf3
70000000 g       .bss.extram	00000000 _extram_start
0001da50 g     F .text.itcm	00000004 pendablesrvreq_isr
000159fc  w    F .text.itcm	0000003c SDClass::totalSize()
20006a3c g     O .bss	00000008 AudioInputSPDIF3::dma
0001d828 g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
0000a264  w    F .text.itcm	00000004 Print::availableForWrite()
200051b0 g     O .data	0000016c __global_locale
0001c264 g     F .text.itcm	000002d8 SdioCard::begin(SdioConfig)
20007490 g     O .bss	00000004 enc_old_pos
00015cf4 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
000216d0 g     F .text.itcm	000000e0 usb_serial_read
20006ddc g     O .bss	00000001 __lock___sfp_recursive_mutex
0001de48 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00002050 g     F .text.itcm	000000c8 Cuntzertu::mute(bool)
00020160 g     F .text.itcm	00000064 usb_config_tx
0001f6ac  w    F .text.itcm	00000006 _close
0001a120 g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
000108e8 g     F .text.itcm	00000080 ElFileSystem::deleteFile(String)
20014c28 g     O .bss	00000004 usb_midi_handleActiveSensing
00012534 g     F .text.itcm	000000b8 pollSerial()
00025e44 g     F .text.itcm	00000010 free
000176dc g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
000267a0 g     F .text.itcm	000000a4 __multadd
0002678c g     F .text.itcm	00000012 _Bfree
00014ab8  w    F .text.itcm	0000001a SDFile::size()
0001e248 g     F .text.itcm	00000026 operator+(StringSumHelper const&, float)
00001f34 g     F .text.itcm	00000006 Cuntzertu::getVerbVol()
00019c28 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
00014d50  w    F .text.itcm	00000040 SDFile::~SDFile()
200059c4  w    O .data	00000016 usb_string_serial_number
20000408  w    O .data	00000048 ArduinoJson::V6215PB2::detail::FloatTraits<double, 8u>::positiveBinaryPowersOfTen()::factors
0001c7d4 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
0001b764 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


